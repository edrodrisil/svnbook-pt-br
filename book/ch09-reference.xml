<chapter id="svn.ref">
  <title>Referência Completa do Subversion</title>
  
  <para>Este capítulo tem a intenção de ser uma referência completa
      para o uso do Subversion. Ele inclui o comando (<command>svn</command>)
      e todos os seus subcomandos, assim como programas de administração
      de repositório (<command>svnadmin</command> e <command>svnlook</command>)
      e seus respectivos sub-comandos.</para>
  
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.ref.svn">
    <title>O Cliente de Linha de Comando do Subversion:
      <command>svn</command></title>
    
    <para>Para usar o cliente de linha de comando, você digita 
      <command>svn</command>, o subcomando que você quer usar 
      <footnote><para>Sim, sim, você não precisa de um subcomando para
      usar a opção <option>--version</option>, mas vamos falar disso num
      instante.</para></footnote>, e quaisquer opções ou argumentos de
      destino sobre os quais você quer realizar a operação&mdash;não há
      uma ordem específica na qual o subcomando e as opções devam
      aparecer.  Por exemplo, todos os comandos a seguir são formas
      válidas de se usar um <command>svn status</command>:</para>

    <screen>
$ svn -v status
$ svn status -v 
$ svn status -v meuarquivo
</screen>

    <para>Você pode encontrar muitos exemplos de como usar a maioria dos 
      comandos do cliente Subversion <xref linkend="svn.tour"/> e dos
      comandos para gerenciamento de propriedades em <xref
      linkend="svn.advanced.props"/>.</para>
    
    <!-- =============================================================== -->
    <sect2 id="svn.ref.svn.sw">
      <title>Opções do <command>svn</command></title> 
      
      <para>Ainda que o Subversion tenha diferentes opções para seus
        subcomandos, todas as opções são globais&mdash;isto é,
        garante-se que cada opção signifique a mesma coisa
        independentemente do subcomando que você use com ela.  Por
        exemplo, <option>--verbose</option> (<option>-v</option>) sempre
        significa <quote>saída verbosa</quote>, qualquer que seja o
        subcomando que você utilizar com ela.</para>

      <variablelist>
        
        <varlistentry>
          <term><option>--auto-props</option></term>
          <listitem>
            <para>Habilita auto-props, sobrescrevendo a diretiva 
              <literal>enable-auto-props</literal> no arquivo 
              <filename>config</filename>.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--change</option> (<option>-c</option>)
            <replaceable>ARG</replaceable></term>
          <listitem>
            <para>Usado como uma forma de se referir a uma
              <quote>mudança</quote> (leia-se uma revisão), esta opção é
              sintaticamente equivalente a <quote>-r
              ARG-1:ARG</quote>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--config-dir</option>
            <replaceable>DIR</replaceable></term>
          <listitem>
            <para>Diz para o Subversion ler a informação de configuração
              a partir do diretório especificado ao invés de seu local
              padrão (<filename>.subversion</filename> no diretório home
              do usuário).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--diff-cmd</option>
            <replaceable>CMD</replaceable></term>
          <listitem>
            <para>Especifica um programa externo a ser usado para exibir
              diferenças entre arquivos.  Quando <command>svn
              diff</command> é invocado sem esta opção, ele usa o
              mecanismo de diff interno do Subversion, que exibe diffs
              unificados por padrão.  Se você quiser usar um programa
              diff externo, use <option>--diff-cmd</option>.  Você pode
              passar opções para o programa diff com a opção 
              <option>--extensions</option> (mais detalhes sobre isso
              mais adiante nesta seção).</para>

            <!-- TODO(fitz): Document -u -b -w and - -ignore-eol-style -->

          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--diff3-cmd</option>
            <replaceable>CMD</replaceable></term>
          <listitem>
            <para>Especifica um programa externo a ser usado para
              mesclar arquivos.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--dry-run</option></term>
          <listitem>
            <para>Faz menção de todos os passos de execução de um
              comando, mas sem efetuar qualquer alteração&mdash;tanto no
              disco quanto no repositório.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--editor-cmd</option>
            <replaceable>CMD</replaceable></term>
          <listitem>
            <para>Especifica um programa externo a ser usado para editar
              mensagens de log ou valores de propriedades.  Consulte a
              seção <literal>editor-cmd</literal> em <xref
              linkend="svn.advanced.confarea.opts.config"/> para ver as
              formas de especificar um editor padrão.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--encoding</option> <replaceable>ENC</replaceable></term>
          <listitem>
            <para>Informa ao Subversion que sua mensagem de submissão
              está codificada com o charset dado.  O padrão é o locale
              nativo de seu sistema operacional, e você deve especificar
              a codificação se sua mensagem de commit estiver em alguma
              codificação diferente.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--extensions</option> (<option>-x</option>)
          <replaceable>ARGS</replaceable></term>
          <listitem>
            <para>Especifica um argumento ou argumentos que o Subversion
              deve passar para um comando diff externo.  Esta opção é
              valida apenas quando usada com os comando <command>svn
              diff</command> ou <command>svn merge</command>, com a
              opção <option>--diff-cmd</option>.  Se você quiser passar
              argumentos múltiplos, você deve delimitá-los todos entre
              aspas duplas (por exemplo, <command>svn diff --diff-cmd
              /usr/bin/diff -x "-b -E"</command>).</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--file</option> (<option>-F</option>)
            <replaceable>FILENAME</replaceable>
          </term>
          <listitem>
            <para>Usa o conteúdo do arquivo especificado para o
              subcomando em questão, sendo que subcomandos diferentes
              fazem coisas diferentes com este conteúdo.  Por exemplo, o
              <command>svn commit</command> usa o conteúdo como uma
              mensagem de log do commit, ao passo que o <command>svn
              propset</command> o utiliza como um valor de
              propriedade.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--force</option></term>
          <listitem>
            <para>Força a execução de um comando ou operação
              específicos.  Há algumas operações em que o Subversion irá
              impedi-lo de prosseguir, em sua utilização normal, mas você
              pode passar a opção force para dizer ao Subversion
              <quote>Eu sei o que estou fazendo, bem como as possíveis
              consequências disto, então deixe-me fazê-lo</quote>.  Esta
              opção seria o equivalente a fazer você mesmo um reparo
              elétrico com a energia ligada&mdash;se você não souber o
              que está fazendo, é provável que tome um choque
              desagradável.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--force-log</option></term>
          <listitem>
            <para>Força que um parâmetro suspeito passado para às opções
              <option>--message</option> (<option>-m</option>) ou
              <option>--file</option> (<option>-F</option>) seja aceito
              como válido.  Por padrão, o Subversion irá produzir um
              erro se os parâmetros destas opções parecerem com
              argumentos de destino do subcomando.  Por exemplo, se você
              passar um caminho de um arquivo versionado para a opção 
              <option>--file</option> (<option>-F</option>), o
              Subversion irá assumir que você cometeu um engano, que
              caminho informado pretendia ser o objeto alvo da operação,
              e que você simplesmente esqueceu de informar algum
              outro arquivo&mdash;não-versionado&mdash;contendo sua
              mensagem de log.  Para confirmar sua intenção e
              sobrescrever esse tipo de erro, passe a opção
              <option>--force-log</option> para os subcomandos que
              aceitam mensagens de log.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--help</option> (<option>-h</option> or
                <option>-?</option>)
          </term>
          <listitem>
            <para>Se usado com um ou mais subcomandos, mostra o texto de
              ajuda preexistente para cada subcomando.  Se usado
              sozinho, exibe o texto de ajuda geral para o cliente
              Subversion.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--ignore-ancestry</option></term>
          <listitem>
            <para>Diz para o Subversion ignorar ancestrais (diretórios
              acima) ao determinar diferenças (baseia-se apenas em
              conteúdos dos caminhos).</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--ignore-externals</option></term>
          <listitem>
            <para>Diz para o Subversion ignorar definições externas e
              cópias de trabalho externas gerenciadas por elas.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--incremental</option></term>
          <listitem>
            <para>Exibe saída em um formado adequado para
              concatenação.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--limit</option>
            <replaceable>NUM</replaceable></term>
          <listitem>
            <para>Exibe apenas as primeiras
              <replaceable>NUM</replaceable> mensagens de log.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--message</option> (<option>-m</option>)
            <replaceable>MESSAGE</replaceable>
          </term>
          <listitem>
            <para>Indica que você irá especificar seja uma mensagem de
              log ou seja um comentário de uma trava na linha de
              comando, depois desta opção.  Por exemplo:</para>
            
            <screen>
$ svn commit -m "Eles não fazem isso no domingo."
</screen>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--new</option> <replaceable>ARG</replaceable></term>
          <listitem>
            <para>Utiliza <replaceable>ARG</replaceable> como objeto
              alvo novo (para uso com <command>svn
              diff</command>).</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--no-auth-cache</option></term>
          <listitem>
            <para>Evita cache de informação de autenticação (p.ex. nome
              de usuário e senha) nos diretórios administrativos do
              Subversion.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--no-auto-props</option></term>
          <listitem>
            <para>Desabilita auto-props, sobrescrevendo a diretiva
              <literal>enable-auto-props</literal> no arquivo
              <filename>config</filename>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--no-diff-added</option></term>
        <listitem>
          <para>Evita que o Subversion exiba diferenças para arquivos
            adicionados.  O comportamento padrão ao adicionar um arquivo
            é que o <command>svn diff</command> exiba as mesmas
            diferenças que você veria se tivesse adicionado todo o
            conteúdo a um arquivo (vazio) existente.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--no-diff-deleted</option></term>
        <listitem>
            <para>Evita que o Subversion exiba diferenças para arquivos
              excluídos.  O comportamento padrão ao remover um arquivo é
              que o <command>svn diff</command> exiba as mesmas
              diferenças que você veria se tivesse mantido o arquivo mas
              removido todo o seu conteúdo.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--no-ignore</option></term>
          <listitem>
            <para>Mostra arquivos na listagem de status que normalmente
              seriam omitidos por corresponderem a um padrão na opção de
              configuração <literal>global-ignores</literal> ou na
              propriedade <literal>svn:ignore</literal>.  Veja <xref
              linkend="svn.advanced.confarea.opts.config"/> e <xref
              linkend="svn.advanced.props.special.ignore"/> para mais
              informações.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--no-unlock</option></term>
          <listitem>
            <para>Não destrava arquivos automaticamente (o comportamento
              padrão é destravar todos os arquivos listados como parte
              de um commit).  Veja <xref
              linkend="svn.advanced.locking"/> para mais
              informações.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--non-interactive</option></term>
          <listitem>
            <para>No caso de uma falha de autenticação, ou credenciais
              insuficientes, evita a outra solicitação de credenciais
              (p.ex. nome de usuário ou senha).  É útil se você estiver
              executando o Subversion dentro de um script automatizado e
              for mais adequado ter uma falha de autenticação do
              Subversion do que um prompt solicitando mais
              informação.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--non-recursive</option> (<option>-N</option>)</term>
          <listitem>
            <para>Evita a recursão de um subcomando dentro de
              subdiretórios.  Muitos subcomandos fazem recursão por
              padrão, mas alguns subcomandos&mdash;usualmente aqueles
              com potencial de remover ou desfazer suas alterações
              locais&mdash;não.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--notice-ancestry</option></term>
          <listitem>
            <para>Leva os ancestrais (diretórios acima) em consideração
              ao determinar diferenças.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--old</option> <replaceable>ARG</replaceable></term>
          <listitem>
            <para>Utiliza <replaceable>ARG</replaceable> como objeto
              alvo antigo (para uso com <command>svn
              diff</command>).</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--password</option>
            <replaceable>PASS</replaceable></term>
          <listitem>
            <para>Indica que você está informando sua senha para
              autenticação na linha de comando&mdash;do contrário, se
              for preciso, o Subversion irá solicitá-la
              interativamente.</para>
          </listitem>
        </varlistentry>
      
        <varlistentry>
          <term><option>--quiet</option> (<option>-q</option>)</term>
          <listitem>
            <para>Solicita que o cliente exiba apenas as informações
              mais essenciais ao executar uma dada operação.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--recursive</option> (<option>-R</option>)</term>
          <listitem>
            <para>Faz um subcomando executar recursivamente dentro dos
              subdiretórios.  A maioria dos subcomandos já executam
              recursivamente por padrão.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--relocate</option> <replaceable>FROM TO
          [PATH...]</replaceable></term>
          <listitem>
            <para>Usado com o subcomando <command>svn switch</command>,
              troca o local do repositório ao qual sua cópia de trabalho
              se refere.  Isto é útil se o local de seu repositório muda
              e você tem uma cópia de trabalho existente que gostaria de
              continuar a usar.  Consulte <command>svn switch</command>
              para conferir um exemplo.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--revision</option> (<option>-r</option>)
            <replaceable>REV</replaceable>
          </term>
          <listitem>
            <para>Indica que você estará informando uma revisão (ou
              intervalo de revisões) para uma dada operação.  Você pode
              informar números de revisão, termos de revisão ou datas
              (entre chaves) como argumentos para a opção de revisão.
              Se você quiser fornecer um intervalo de revisões, você
              pode informar duas revisões separadas por dois-pontos.
              Por exemplo:</para>

            <screen>
$ svn log -r 1729
$ svn log -r 1729:HEAD
$ svn log -r 1729:1744
$ svn log -r {2001-12-04}:{2002-02-17}
$ svn log -r 1729:{2002-02-17}
</screen>

            <para>Veja <xref linkend="svn.tour.revs.keywords"/> para
              informações.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--revprop</option></term>
          <listitem>
            <para>Opera em uma propriedade de revisão ao invés de uma
              propriedade específica de um arquivo ou diretório.  Esta
              opção requer que você também informe uma revisão com a
              opção <option>--revision</option>
              (<option>-r</option>).</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--show-updates</option> (<option>-u</option>)</term>
          <listitem>
            <para>Faz com que o cliente exiba informação sobre quais
              arquivos em sua cópia de trabalho estão desatualizados.
              Isto não atualiza nenhum de seus arquivos&mdash;apenas
              mostra a você quais arquivos serão atualizados se você
              executar um <command>svn update</command>.
            </para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--stop-on-copy</option></term>
          <listitem>
            <para>Faz com que um subcomando do Subversion que está
              varrendo o histórico de um recurso versionado pare de
              vasculhar essas informações históricas quando uma
              cópia&mdash;isto é, um local no histórico em que o recurso
              foi copiado de outro local no repositório&mdash;seja
              encontrada.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--strict</option></term>
          <listitem>
            <para>Faz com que o Subversion use semântica estrita, um
              conceito que é um pouco vago a não ser quando aplicado a
              subcomandos específicos (especificamente ao <command>svn
              propget</command>).</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--targets</option>
            <replaceable>FILENAME</replaceable></term>
          <listitem>
            <para>Diz para o Subversion obter a lista de arquivos em que
              você quer executar uma operação a partir de um nome de
              arquivo informado ao invés de ter de listar todos os
              arquivos na linha de comando.
            </para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--username</option>
            <replaceable>NAME</replaceable></term>
          <listitem>
            <para>Indica que você está informando seu nome de usuário
              para autenticação na linha de comando&mdash;de outra
              forma, se for necessário, o Subversion irá solicitá-lo a
              você interativamente.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--verbose</option> (<option>-v</option>)</term>
          <listitem>
            <para>Solicita que o cliente exibe o máximo de informação
              que puder ao executar qualquer subcomando.  Isto pode
              fazer com que o Subversion exiba campos adicionais,
              informações detalhadas sobre cada arquivo, ou informações
              extras sobre suas ações em execução.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--version</option></term>
          <listitem>
            <para>Exibe informação da versão do cliente.  Esta
              informação não apenas inclui o número de versão do
              cliente, mas também uma listagem de todos os módulos de
              acesso ao repositório que o cliente pode usar para acessar
              um repositório Subversion.  Com <option>--quiet</option>
              (<option>-q</option>) ele exibe apenas o número de versão
              de forma compacta.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--xml</option></term>
          <listitem>
            <para>Exibe a saída em um formato XML.</para>
          </listitem>
        </varlistentry>
        
      </variablelist>
      
    </sect2>
    
    <!-- =============================================================== -->
    <sect2 id="svn.ref.svn.c">
      <title>Subcomandos <command>svn</command></title>

      <para>Aqui temos vários subcomandos:</para>

      <refentry id="svn.ref.svn.c.add">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomandos</secondary>
          <tertiary>add</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn add</refname>
          <refpurpose>Adiciona arquivos, diretórios ou links simbólicos.</refpurpose>
        </refnamediv>

        <refsect1>
          <title>Sinopse</title> 
          <programlisting>svn add PATH...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>
          
          <para>Agenda arquivos, diretórios ou links simbólicos em sua
            cópia de trabalho para adição no repositório.  Eles serão
            carregados e adicionados efetivamente ao repositório em sua
            próxima submissão.  Se você adicionar alguma coisa e mudar
            de idéia antes de realizar o commit, você pode cancelar o
            agendamento usando <command>svn revert</command>.
          </para>
        </refsect1>
        
        <refsect1>
          <title>Nomes Alternativos</title>
          <para>Nenhum</para>
        </refsect1>
        
        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Não</para>
        </refsect1>
        
        <refsect1>
          <title>Opções</title>

          <screen>
--targets FILENAME
--non-recursive (-N)
--quiet (-q)
--config-dir DIR
--no-ignore
--auto-props
--no-auto-props
--force
</screen>
        </refsect1>
        
        <refsect1>
          <title>Exemplos</title>
          
          <para>Para adicionar um arquivo para sua cópia de trabalho:</para>

          <screen>
$ svn add foo.c 
A         foo.c
</screen>

          <para>Ao adicionar um diretório, o comportamento padrão do 
            <command>svn add</command> é ser recursivo:</para>
          
          <screen>
$ svn add testdir
A         testdir
A         testdir/a
A         testdir/b
A         testdir/c
A         testdir/d
</screen>

          <para>Você também pode adicionar um diretório sem adicionar
            seu conteúdo:</para>
          
          <screen>
$ svn add --non-recursive otherdir
A         otherdir
</screen>

          <para>Normalmente, o comando <command>svn add *</command> vai
            desconsiderar quaisquer diretórios que já estiverem sob
            controle de versão.  Algumas vezes, no entanto, você pode
            querer adicionar quaisquer objetos não-versionados em sua
            cópia de trabalho, incluindo os que estiverem escondidos
            mais profundamente na árvore de diretórios.  Passar a opção 
            <option>--force</option> faz com que o <command>svn
            add</command> aja recursivamente também nos diretórios
            versionados:
          </para>

          <screen>
$ svn add * --force
A         foo.c
A         somedir/bar.c
A         otherdir/docs/baz.doc
&hellip;
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.blame">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcommands</secondary>
          <tertiary>blame</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn blame</refname>
          <refpurpose>Mostra informação de autor e revisão por linha
            para os arquivos ou URLs especificados.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn blame TARGET[@REV]...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>
          
          <para>Mostra informação de autor e revisão por linha para os
            arquivos ou URLs especificados.  Cada linha de texto é
            prefixada com o nome do autor (nome de usuário) e o número
            de revisão da última alteração naquela linha.</para>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>praise, annotate, ann</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Nada</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Sim</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) ARG
--verbose (-v)
--incremental
--xml
--extensions (-x) ARG
--force
--username ARG
--password ARG
--no-auth-cache
--non-interactive
--config-dir ARG
</screen>

<!--

TODO(fitz): doc this:
  - -incremental            : give output suitable for concatenation
  - -xml                    : output in XML
  -x [- -extensions] arg    : Default: '-u'. When Subversion is invoking an
                             external diff program, ARG is simply passed along
                             to the program. But when Subversion is using its
                             default internal diff implementation, or when
                             Subversion is displaying blame annotations, ARG
                             could be any of the following:
                                -u (- -unified):
                                   Output 3 lines of unified context.
                                -b (- -ignore-space-change):
                                   Ignore changes in the amount of white space.
                                -w (- -ignore-all-space):
                                   Ignore all white space.
                                - -ignore-eol-style:
                                   Ignore changes in EOL style
  - -force                  : force operation to run

-->





        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Se você quiser ver informação dos responsáveis pelos
            fontes para <filename>readme.txt</filename> em seu
            repositório:</para>
          <screen>
$ svn blame http://svn.red-bean.com/repos/test/readme.txt
     3      sally This is a README file.
     5      harry You should read this.
</screen>

          <para>Ainda que o <command>svn blame</command> informe que
            Harry modificou o arquivo readme.txt por último na revisão
            5, você terá de verificar exatamente o que a revisão mudou
            para ter certeza de que Harry tenha mudado o
            <emphasis>context</emphasis> da linha&mdash;ele pode ter
            apenas ajustado espaços em branco, p.ex.
          </para>
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.cat">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcommands</secondary>
          <tertiary>cat</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn cat</refname>
          <refpurpose>Exibe o conteúdo de arquivos ou URLs
            especificadas.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn cat TARGET[@REV]...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>
          
          <para>Exibe o conteúdo de arquivos ou URLs especificadas.
            Para listar o conteúdo de diretórios, veja <command>svn
            list</command>.</para>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>Nenhum</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Nada</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Sim</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Se você quiser ver o arquivo readme.txt em seu
            repositório sem carregá-lo para sua cópia de trabalho (check
            out):</para>
          <screen>
$ svn cat http://svn.red-bean.com/repos/test/readme.txt
This is a README file.
You should read this.
</screen>

          <tip>
            <para>Se sua cópia de trabalho estiver desatualizada (ou se
              você tiver alterações locais) e você quiser ver a revisão 
              <literal>HEAD</literal> de um arquivo em sua cópia de
              trabalho, o <command>svn cat</command> vai obter
              automaticamente a revisão <literal>HEAD</literal> quando
              você lhe passar um caminho:</para>
          </tip>

          <screen>
$ cat foo.c
This file is in my local working copy 
and has changes that I've made.

$ svn cat foo.c
Latest revision fresh from the repository!
</screen>
          
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.checkout">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>checkout</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn checkout</refname>
          <refpurpose>Carrega uma cópia de trabalho a partir do
            repositório.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn checkout URL[@REV]... [PATH]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>
          
          <para>Carrega uma cópia de trabalho a partir do repositório.
            Se <replaceable>PATH</replaceable> for omitido, a base da
            URL será usada como destino.  Se múltiplas URLs forem
            informadas, cada uma será carregada dentro de um
            subdiretório de <replaceable>PATH</replaceable>, com o nome
            do subdiretório sendo a base da URL.</para>

        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>co</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cria uma cópia de trabalho.</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Sim</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>
          
          <screen>
--revision (-r) REV
--quiet (-q)
--non-recursive (-N)
--username USER
--password PASS
--no-auth-cache
--non-interactive
--ignore-externals
--config-dir DIR
</screen>
        </refsect1>
        
        <refsect1>
          <title>Exemplos</title>

          <para>Carrega uma cópia de trabalho dentro de subdiretório
            chamado <filename>mine</filename>:</para>

          <screen>
$ svn checkout file:///tmp/repos/test mine
A  mine/a
A  mine/b
Checked out revision 2.
$ ls
mine
</screen>

          <para>Carrega dois diretórios diferentes para duas cópias de
            trabalho separadas:</para>

          <screen>
$ svn checkout file:///tmp/repos/test  file:///tmp/repos/quiz
A  test/a
A  test/b
Checked out revision 2.
A  quiz/l
A  quiz/m
Checked out revision 2.
$ ls
quiz  test
</screen>

          <para>Carrega dois diretórios diferentes para duas cópias de
            trabalho separadas, mas põe ambas dentro de um diretório
            chamado <filename>working-copies</filename>:</para>

          <screen>
$ svn checkout file:///tmp/repos/test  file:///tmp/repos/quiz working-copies
A  working-copies/test/a
A  working-copies/test/b
Checked out revision 2.
A  working-copies/quiz/l
A  working-copies/quiz/m
Checked out revision 2.
$ ls
working-copies
</screen>

          <para>Se você interromper um checkout (ou houver qualquer
            coisa que o interrompa, como perda da conexão de rede,
            etc.), você pode reiniciá-lo tanto executando um comando
            checkout idêntico outra vez, como atualizando sua cópia de
            trabalho incompleta:</para>

          <screen>
$ svn checkout file:///tmp/repos/test test
A  test/a
A  test/b
^C
svn: The operation was interrupted
svn: caught SIGINT

$ svn checkout file:///tmp/repos/test test
A  test/c
A  test/d
^C
svn: The operation was interrupted
svn: caught SIGINT

$ cd test
$ svn update
A  test/e
A  test/f
Updated to revision 3.
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.cleanup">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>cleanup</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn cleanup</refname>
          <refpurpose>Faz recursivamente uma limpeza na área de
            trabalho.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn cleanup [PATH...]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Faz recursivamente uma limpeza na área de trabalho,
            removendo travas da cópia de trabalho e concluindo operações
            não finalizadas.  Sempre que você obtiver um erro de
            <quote>cópia de trabalho travada</quote>, execute este
            comando para remover travas perdidas e deixar sua cópia de
            trabalho no estado usável novamente.</para>

          <para>Se, por algum motivo, um <command>svn update</command>
            falhar devido a um problema ao executar um programa diff
            externo (p.ex. devido a entrada do usuário ou falha de
            rede), passe a opção <option>--diff3-cmd</option> para
            permitir que a limpeza complete qualquer mesclagem com seu
            programa diff externo.  Você também pode especificar um
            diretório de configuração com <option>--config-dir</option>,
            mas você deve precisar destas opções em raríssimas
            ocasições.</para>

        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>Nenhum</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Não</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--diff3-cmd CMD
--config-dir DIR
</screen>

        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Bem, não há muito para esta parte de exemplo aqui pois o
            <command>svn cleanup</command> não gera nenhuma saída.  Se
            você não informar um caminho
            (<replaceable>PATH</replaceable>), então
            <quote><filename>.</filename></quote> é usado.</para>

          <screen>
$ svn cleanup

$ svn cleanup /path/to/working-copy
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.commit">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>commit</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn commit</refname>
          <refpurpose>Envia as alterações de sua cópia de trabalho para
            o repositório.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn commit [PATH...]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Envia as alterações de sua cópia de trabalho para o
            repositório.  Se você não informar uma mensagem de log de
            registro usando seja a opção <option>--file</option> ou a
            opção <option>--message</option>, o <command>svn</command>
            vai executar seu editor de texto para que você escreva uma
            mensagem de commit.  Veja a seção
            <literal>editor-cmd</literal> em <xref
            linkend="svn.advanced.confarea.opts.config"/>.</para>

          <para><command>svn commit</command> vai enviar quaisquer
            marcadores de trava que encontrar e irá liberar as travas em
            todos os caminhos <replaceable>PATHS</replaceable>
            submetidos (recursivamente), a menos que
            <option>--no-unlock</option> seja passado.</para>

          <tip>
            <para>Se você começar um commit e o Subversion executar seu
              editor para que você componha a mensagem de registro, você
              ainda pode abortar sem submeter suas alterações.  Se você
              quiser cancelar a operação, apenas feche o editor sem
              salvar sua mensagem de log e o Subversion irá lhe
              perguntar se você quer cancelar a operação, prosseguir sem
              uma mensagem de log, ou editar a mensagem
              novamente.</para>
          </tip>

        </refsect1>


        
        <refsect1>
          <title>Nomes Alternativos</title>
          <para>ci (abreviação para <quote>check in</quote>; e não 
            <quote>co</quote>, que é a abreviação para 
            <quote>checkout</quote>)</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho, repositório</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Sim</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--message (-m) TEXT
--file (-F) FILE
--quiet (-q)
--no-unlock
--non-recursive (-N)
--targets FILENAME
--force-log
--username USER
--password PASS
--no-auth-cache
--non-interactive
--encoding ENC
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Submete uma modificação simples em um arquivo com a
            mensagem de log na linha de comando e um alvo implícito de
            seu diretório atual
            (<quote><filename>.</filename></quote>):</para>
          
          <screen>
$ svn commit -m "added howto section."
Sending        a
Transmitting file data .
Committed revision 3.
</screen>

          <para>Submete uma modificação no arquivo
            <filename>foo.c</filename> (explicitamente especificado na
            linha de comando) com a mensagem de log contida em um
            arquivo chamado <literal>msg</literal>:</para>

          <screen>
$ svn commit -F msg foo.c
Sending        foo.c
Transmitting file data .
Committed revision 5.
</screen>

          <para>Se você quiser usar um arquivo que está sob controle de
            versão para sua mensagem de log com <option>--file</option>,
            você precisa passar a opção
            <option>--force-log</option>:</para>

          <screen>
$ svn commit --file file_under_vc.txt foo.c
svn: The log message file is under version control
svn: Log message file is a versioned file; use '--force-log' to override

$ svn commit --force-log --file file_under_vc.txt foo.c
Sending        foo.c
Transmitting file data .
Committed revision 6.
</screen>

          <para>Para efetivar a remoção de um arquivo agendado para
            exclusão:</para>

          <screen>
$ svn commit -m "removed file 'c'."
Deleting       c

Committed revision 7.
</screen>
          
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.copy">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>copy</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn copy</refname>
          <refpurpose>Copia um arquivo ou diretório em uma cópia de
            trabalho ou no repositório.</refpurpose>
        </refnamediv>

        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn copy SRC DST</programlisting>
        </refsect1>

        <refsect1>
          <title>Descrição</title>
          
          <para>Copia um arquivo em uma cópia de trabalho ou no
            repositório.  <replaceable>SRC</replaceable> e
            <replaceable>DST</replaceable> podem ser tanto um caminho em
              uma cópia de trabalho (WC) ou uma URL:</para>
            
            <variablelist>

              <varlistentry>
                <term>WC  -&gt; WC</term>
                <listitem>
                  <para>Copia e agenda um item para adição (com o
                    histórico).</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>WC  -&gt; URL</term>
                <listitem>
                  <para>Imediatamente submete uma cópia de WC para a
                    URL.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>URL -&gt; WC</term>
                <listitem>
                  <para>Obtém (<foreignphrase>check out</foreignphrase>)
                    a URL para dentro da WC, agendando-a para
                    adição.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>URL -&gt; URL</term>
                <listitem>
                  <para>Execução de uma cópia inteiramente do lado do
                    servidor.  Isto é frequentemente usado para criação
                    de ramos (<foreignphrase>branch</foreignphrase>) e
                    de rótulos
                    (<foreignphrase>tag</foreignphrase>).</para>
                </listitem>
              </varlistentry>

            </variablelist>

          <note>
            <para>Você só pode copiar arquivos para dentro de um único
              repositório.  O Subversion não dá suporte a cópias entre
              repositórios distintos.</para>
          </note>

        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>cp</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>O repositório, se o destino for uma URL.</para>
          <para>A cópia de trabalho, se o destino for um caminho em uma
            WC.</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Se a origem ou destino da cópia for o repositório, ou se
            for preciso buscar um dado número de revisão da
            origem.</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--message (-m) TEXT
--file (-F) FILE
--revision (-r) REV
--quiet (-q)
--username USER
--password PASS
--no-auth-cache
--non-interactive
--force-log
--editor-cmd EDITOR
--encoding ENC
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Copia um item para dentro de sua cópia de trabalho (
            apenas agenda a cópia&mdash;nada ocorre com o repositório
            até que você submeta a alteração):</para>

          <screen>
$ svn copy foo.txt bar.txt
A         bar.txt
$ svn status
A  +   bar.txt
</screen>

          <para>Copia um item de sua cópia de trabalho para uma URL no
            repositório (com submissão imediata, então você deve
            informar também uma mensagem de log):</para>

          <screen>
$ svn copy near.txt file:///tmp/repos/test/far-away.txt -m "Remote copy."

Committed revision 8.
</screen>

          <para>Copia um item do repositório para sua cópia de trabalho
            (apenas agenda a cópia&mdash;nada ocorre com o repositório
            até que você submeta a alteração):</para>

          <tip>
            <para>Esta é a maneira recomendada para ressuscitar um
              arquivo morto em seu repositório!</para>
          </tip>

          <screen>
$ svn copy file:///tmp/repos/test/far-away near-here
A         near-here
</screen>

          <para>E, finalmente, copiando entre duas URLs:</para>

          <screen>
$ svn copy file:///tmp/repos/test/far-away file:///tmp/repos/test/over-there -m "remote copy."

Committed revision 9.
</screen>

          <tip>
            <para>Esta é a forma mais fácil de <quote>rotular</quote>
              (tag) uma revisão em seu repositório&mdash;apenas execute
              um <command>svn copy</command> daquela revisão
              (normalmente a <literal>HEAD</literal>) para dentro de seu
              diretório tags.</para>
          </tip>

          <screen>
$ svn copy file:///tmp/repos/test/trunk file:///tmp/repos/test/tags/0.6.32-prerelease -m "tag tree"

Committed revision 12.
</screen>

          <para>E não se preocupe se você se esquecer de rotular&mdash;
            você pode sempre especificar uma revisão mais antiga e o
            rótulo a qualquer momento:</para>

          <screen>
$ svn copy -r 11 file:///tmp/repos/test/trunk file:///tmp/repos/test/tags/0.6.32-prerelease -m "Forgot to tag at rev 11"

Committed revision 13.
</screen>
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.delete">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>delete</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn delete</refname>
          <refpurpose>Exclui um item de uma cópia de trabalho ou do
            repositório.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn delete PATH...</programlisting>
          <programlisting>svn delete URL...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Os itens especificados pelo
            <replaceable>PATH</replaceable> são agendados para exclusão
            até o próximo commit.  Os arquivos (e diretórios que ainda
            não foram submetidos) são imediatamente removidos da cópia
            de trabalho.  O comando não irá remover quaisquer itens não
            versionados ou modificados; utilize a opção
            <option>--force</option> para sobrescrever este
            comportamento.</para>

          <para>Itens especificados pela URL são excluídos do
            repositório por meio de um registro (commit) imediato.
            Múltiplas URLs sofrem as alterações de forma atômica.</para>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>del, remove, rm</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho, se executando sobre arquivos;
            repositório, se operando sobre URLs</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Apenas quando executado sobre URLs</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--force
--force-log
--message (-m) TEXT
--file (-F) FILE
--quiet (-q)
--targets FILENAME
--username USER
--password PASS
--no-auth-cache
--non-interactive
--editor-cmd EDITOR
--encoding ENC
--config-dir DIR
</screen>
        </refsect1>
        
        <refsect1>
          <title>Exemplos</title>

          <para>Usar <command>svn</command> para excluir um arquivo de
            sua cópia de trabalho remove sua cópia local do arquivo, mas
            apenas faz o agendamento para que ele seja removido do
            repositório.  Quando você submeter a alteração, o arquivo é
            excluído efetivamente do repositório.</para>

          <screen>
$ svn delete myfile
D         myfile

$ svn commit -m "Deleted file 'myfile'."
Deleting       myfile
Transmitting file data .
Committed revision 14.
</screen>

          <para>Excluir uma URL, no entanto, é imediato, então você deve
            informar também uma mensagem de log:</para>

          <screen>
$ svn delete -m "Deleting file 'yourfile'" file:///tmp/repos/test/yourfile

Committed revision 15.
</screen>

          <para>Aqui está um exemplo de como forçar a exclusão de um
            arquivo que já foi modificado localmente:</para>

          <screen>
$ svn delete over-there 
svn: Attempting restricted operation for modified resource
svn: Use --force to override this restriction
svn: 'over-there' has local modifications

$ svn delete --force over-there 
D         over-there
</screen>
          
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.diff">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>diff</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn diff</refname>
          <refpurpose>Exibe as diferenças entre duas revisões ou
            caminhos.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>diff [-c M | -r N[:M]] [TARGET[@REV]...]</programlisting>
          <programlisting>diff [-r N[:M]] --old=OLD-TGT[@OLDREV] [--new=NEW-TGT[@NEWREV]] [PATH...]</programlisting>
          <programlisting>diff OLD-URL[@OLDREV] NEW-URL[@NEWREV]</programlisting>

        </refsect1>
        <refsect1>
          <title>Descrição</title>


          <para>Exibe as diferenças entre dois caminhos.  As formas de
            se usar o <command>svn diff</command> são:</para>

          <para>Use somente <command>svn diff'</command> para exibir as
            modificações locais em uma cópia de trabalho.</para>

          <para>Exibe as mudanças feitas nos
            <replaceable>TARGET</replaceable>s de como eram em
            <replaceable>REV</replaceable> entre duas revisões.
            <replaceable>TARGET</replaceable>s podem ser todos cópias de
            trabalho como <replaceable>URL</replaceable>s.  Se
            <replaceable>TARGET</replaceable>s são caminhos na cópia de
            trabalho, <replaceable>N</replaceable> se referirá por
            padrão a <literal>BASE</literal> e
            <replaceable>M</replaceable>, à cópia de trabalho; se forem
            <replaceable>URL</replaceable>s,
            <replaceable>N</replaceable> deve ser especificado e
            <replaceable>M</replaceable> servirá de referência a
            <literal>HEAD</literal>.  A opção <quote>-c M</quote> é
            equivalente a <quote>-r N:M</quote> sendo <literal>N =
            M-1</literal>.  Usar <quote>-c -M</quote> faz o contrário:
            <quote>-r M:N</quote> sendo <literal>N =
            M-1</literal>.</para>

          <para>Exibe as diferenças entre 
            <replaceable>OLD-TGT</replaceable> de como estava em 
            <replaceable>OLDREV</replaceable> e
            <replaceable>NEW-TGT</replaceable> de como estava em 
            <replaceable>NEWREV</replaceable>.
            <replaceable>PATH</replaceable>s, se especificados, são
            relativos a <replaceable>OLD-TGT</replaceable> e
            <replaceable>NEW-TGT</replaceable> e restringem a saída às
            diferenças entre estes caminhos.
            <replaceable>OLD-TGT</replaceable> e
            <replaceable>NEW-TGT</replaceable> podem ser caminhos na
            cópia de trabalho ou <replaceable>URL[@REV]</replaceable>.
            <replaceable>NEW-TGT</replaceable>, por padrão, se refere a
            <replaceable>OLD-TGT</replaceable> se não for especificada.
            <quote>-r N</quote> faz com que OLDREV seja N, -r N:M
            faz com que <replaceable>OLDREV</replaceable> seja
            <replaceable>N</replaceable> e que
            <replaceable>NEWREV</replaceable> seja
            <replaceable>M</replaceable>.</para>

          <para>Abreviação para <command>svn diff --old=OLD-URL[@OLDREV]
            --new=NEW-URL[@NEWREV]</command></para>

          <para><command>svn diff -r N:M URL</command> é abreviação para
            <command>svn diff -r N:M --old=URL
            --new=URL</command>.</para>

          <para><command>svn diff [-r N[:M]] URL1[@N]
            URL2[@M]</command> é abreviação para <command>svn diff [-r
            N[:M]] --old=URL1 --new=URL2</command>.</para>

          <para>Se <replaceable>TARGET</replaceable> for uma URL, então
            as revisões N e M podem ser dadas tanto pela opção
            <option>--revision</option> como pela notação
            <quote>@</quote> como descrito anteriormente.</para>

          <para>Se <replaceable>TARGET</replaceable> é um caminho na
            cópia de trabalho, então a opção <option>--revision</option>
            significa:</para>

          <variablelist>

            <varlistentry>
              <term><option>--revision N:M</option></term>
              <listitem>
                <para>O servidor compara 
                  <replaceable>TARGET</replaceable>@<replaceable>N</replaceable>
                  e
                  <replaceable>TARGET</replaceable>@<replaceable>M</replaceable>.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><option>--revision N</option></term>
              <listitem>
                <para>O cliente compara 
                  <replaceable>TARGET</replaceable>@<replaceable>N</replaceable>
                  com a cópia de trabalho.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>(sem <option>--revision</option>)</term>
              <listitem>
                <para>O cliente compara a base com a cópia de trabalho
                  de <replaceable>TARGET</replaceable>.</para>
              </listitem>
            </varlistentry>

          </variablelist>

          <para>Se a sintaxe alternativa for usada, o servidor compara 
            <replaceable>URL1</replaceable> e
            <replaceable>URL2</replaceable> nas revisões 
            <replaceable>N</replaceable> e
            <replaceable>M</replaceable> respectivamente.  Se tanto 
            <replaceable>N</replaceable> ou
            <replaceable>M</replaceable> forem omitidos, é assumido o
            valor de <literal>HEAD</literal>.</para>

          <para>Por padrão, <command>svn diff</command> ignora os
            diretórios superiores dos caminhos dos arquivos e meramente
            compara o conteúdo dos dois arquivos sendo comparados.  Se
            você usar <option>--notice-ancestry</option>, estes
            ancestrais dos caminhos serão levados em consideração ao
            comparar as revisões (isto é, se você executar <command>svn
            diff</command> em dois arquivos com conteúdos idênticos mas
            com diretórios superiores em caminhos diferentes, você irá
            ver o conteúdo inteiro do arquivo como se ele tivesse sido
            removido e adicionado novamente).</para>

        </refsect1>
        <refsect1>
          <title>Nomes Alternativos</title>
          <para>di</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Nada</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Para obter as diferenças de qualquer coisa com relação
            à revisão <literal>BASE</literal> em sua cópia de
            trabalho</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) ARG
--change (-c) ARG
--old ARG
--new ARG
--non-recursive (-N)
--diff-cmd CMD
--extensions (-x) "ARGS"
--no-diff-deleted
--notice-ancestry
--summarize
--force
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR

</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Compara <literal>BASE</literal> e sua cópia de trabalho
            (um dos usos mais comuns do <command>svn
            diff</command>):</para>

          <screen>
$ svn diff COMMITTERS 
Index: COMMITTERS
===================================================================
--- COMMITTERS	(revision 4404)
+++ COMMITTERS	(working copy)
</screen>

          <para>Ver o que mudou no arquivo 
            <literal>COMMITTERS</literal> na revisão 9115:</para>

          <screen>
$ svn diff -c 9115 COMMITTERS 
Index: COMMITTERS
===================================================================
--- COMMITTERS	(revision 3900)
+++ COMMITTERS	(working copy)
</screen>


          <para>Verificar como as modificações em sua cópia de trabalho
            se comparam com relação a revisões mais antigas:</para>

          <screen>
$ svn diff -r 3900 COMMITTERS 
Index: COMMITTERS
===================================================================
--- COMMITTERS	(revision 3900)
+++ COMMITTERS	(working copy)
</screen>

          <para>Comparar a revisão 3000 com a revisão 3500 usando a
            sintaxe de <quote>@</quote>:</para>

          <screen>
$ svn diff http://svn.collab.net/repos/svn/trunk/COMMITTERS@3000 http://svn.collab.net/repos/svn/trunk/COMMITTERS@3500
Index: COMMITTERS
===================================================================
--- COMMITTERS	(revision 3000)
+++ COMMITTERS	(revision 3500)
&hellip;
</screen>

          <para>Compara a revisão 3000 com a revisão 3500 usando a
            notação de intervalo (você passa apenas uma URL neste
            caso):</para>

          <screen>
$ svn diff -r 3000:3500 http://svn.collab.net/repos/svn/trunk/COMMITTERS
Index: COMMITTERS
===================================================================
--- COMMITTERS	(revision 3000)
+++ COMMITTERS	(revision 3500)
</screen>


          <para>Compara a revisão 3000 com a revisão 3500 de todos os
            arquivos em <filename>trunk</filename> usando a notação de
            intervalo:</para>

          <screen>
$ svn diff -r 3000:3500 http://svn.collab.net/repos/svn/trunk
          </screen>


          <para>Compara a revisão 3000 com a revisão 3500 apenas de três
            arquivos em <filename>trunk</filename> usando a notação de
            intervalo:</para>

          <screen>
$ svn diff -r 3000:3500 --old http://svn.collab.net/repos/svn/trunk COMMITTERS README HACKING
          </screen>

          <para>Se você já tem uma cópia de trabalho, você pode obter as
            diferenças sem digitar URLs longas:</para>

          <screen>
$ svn diff -r 3000:3500 COMMITTERS 
Index: COMMITTERS
===================================================================
--- COMMITTERS	(revision 3000)
+++ COMMITTERS	(revision 3500)
</screen>

          <para>Use <option>--diff-cmd</option>
            <replaceable>CMD</replaceable> <option>-x</option> para
            passar argumentos diretamente para o programa diff
            externo</para>
          
          <screen>
$ svn diff --diff-cmd /usr/bin/diff -x "-i -b" COMMITTERS 
Index: COMMITTERS
===================================================================
0a1,2
&gt; This is a test
&gt; 
</screen>
          
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.export">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>export</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn export</refname>
          <refpurpose>Exporta uma árvore de diretórios limpa.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn export [-r REV] URL[@PEGREV] [PATH]</programlisting>
          <programlisting>svn export [-r REV] PATH1[@PEGREV] [PATH2]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>A primeira forma exporta uma árvore de diretórios limpa
            a partir do repositório especificado pela URL, na revisão
            <replaceable>REV</replaceable> se esta for dada, ou de
            <literal>HEAD</literal> em caso contrário, para o caminho
            dado por <replaceable>PATH</replaceable>.  Se 
            <replaceable>PATH</replaceable> for omitido, o último
            componente da <replaceable>URL</replaceable> é usado como
            nome do diretório local.</para>

          <para>A segunda forma exporta uma árvore de diretórios limpa a
            partir da cópia de trabalho especificada por
            <replaceable>PATH1</replaceable> para o caminho dado por 
            <replaceable>PATH2</replaceable>.  Todas as modificações
            locais serão preservadas, mas arquivos que não estiverem sob
            controle de versão não serão copiados.</para>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>Nenhum</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Disco local</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Apenas se exportando a partir de uma URL</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--quiet (-q)
--force
--username USER
--password PASS
--no-auth-cache
--non-interactive
--non-recursive (-N)
--config-dir DIR
--native-eol EOL
--ignore-externals
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Exporta a partir de sua cópia de trabalho (não exibe
            nenhum arquivo ou diretório):</para>

          <screen>
$ svn export a-wc my-export
Export complete.
</screen>

          <para>Exporta diretamente a partir do repositório (exibe cada
            arquivo e diretório):</para>

          <screen>
$ svn export file:///tmp/repos my-export
A  my-export/test
A  my-export/quiz
&hellip;
Exported revision 15.
</screen>

          <para>Ao distribuir pacotes de seus repositório específicos
            para um determinado sistema operacional, pode ser útil
            exportar uma árvore que use o marcador de fim de linha (EOL)
            específico.  A opção <option>--native-eol</option> fará
            isso, mas ela afeta apenas os arquivos que tenham a
            propriedade <literal>svn:eol-style = native</literal>
            anexada a si.  Por exemplo, para exportar uma árvore com
            todas as terminações de linhas dadas do tipo CRLF
            (possivelmente para distribuição de arquivos .zip para
            Windows):</para>

          <screen>
$ svn export file:///tmp/repos my-export --native-eol CRLF
A  my-export/test
A  my-export/quiz
&hellip;
Exported revision 15.
</screen>

          <para>Você pode especificar <literal>LR</literal>,
            <literal>CR</literal>, ou <literal>CRLF</literal> como tipos
            de marcadores de fim de linha com esta opção
            <option>--native-eol</option>.</para>

        </refsect1>
      </refentry>



      <refentry id="svn.ref.svn.c.help">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>help</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn help</refname>
          <refpurpose>Ajuda!</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn help [SUBCOMMAND...]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Este é seu melhor amigo quando estiver usando o
            Subversion e este livro sequer chegará a seus
            pés!</para>
        </refsect1>
        
        <refsect1>
          <title>Nomes Alternativos</title>
          <para>?, h</para>
          <para>As opções <option>-?</option>, <option>-h</option> e
            <option>--help</option> têm todas o mesmo efeito que usando
            o subcomando <command>help</command>.</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Nada</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Não</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--config-dir DIR
</screen>
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.import">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>import</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn import</refname>
          <refpurpose>Submete (<foreignphrase>commit</foreignphrase>) um
            arquivo ou árvore não-versionada ao
            repositório.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn import [PATH] URL</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Submete recursivamente uma cópia de 
            <replaceable>PATH</replaceable> para
            <replaceable>URL</replaceable>.  Se 
            <replaceable>PATH</replaceable> for omitido, então
            <quote><filename>.</filename></quote> é assumido.
            Diretórios anteriores são criados no repositório, se
            necessário.</para>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>Nenhum</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Repositório</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Sim</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--message (-m) TEXT
--file (-F) FILE
--quiet (-q)
--non-recursive (-N)
--username USER
--password PASS
--no-auth-cache
--non-interactive
--force-log
--editor-cmd EDITOR 
--encoding ENC
--config-dir DIR
--auto-props
--no-auto-props
--ignore-externals
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Isto importa o diretório local
            <filename>myproj</filename> para dentro de 
            <filename>trunk/misc</filename> em seu repositório.  O
            diretório <filename>trunk/misc</filename> não precisa
            existir antes da operação&mdash;<command>svn
            import</command> irá criar diretórios recursivamente para
            você.</para>

          <screen>
$ svn import -m "New import" myproj http://svn.red-bean.com/repos/trunk/misc
Adding         myproj/sample.txt
&hellip;
Transmitting file data .........
Committed revision 16.
</screen>

          <para>Atente que isto <emphasis>não</emphasis> cria um
            diretório chamado <filename>myproj</filename> no
            repositório.  Se é isso o que você quer, simplesmente
            adicione <filename>myproj</filename> ao final da URL:</para>

          <screen>
$ svn import -m "New import" myproj http://svn.red-bean.com/repos/trunk/misc/myproj
Adding         myproj/sample.txt
&hellip;
Transmitting file data .........
Committed revision 16.
</screen>

          <para>Depois de importar dados, perceba que a árvore original
            <emphasis>not</emphasis> está sob controle de versão.  Para
            começar a trabalhar, você ainda precisa realizar um
            <command>svn checkout</command> para obter uma nova cópia de
            trabalho da árvore.</para>
          
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.info">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>info</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn info</refname>
          <refpurpose>Exibe informação sobre um item local ou
            remoto.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn info [TARGET[@REV]...]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Exibe informação sobre caminhos na cópia de trabalho ou
            URLs especificadas.  A informação exibida para ambos pode
            incluir:</para>

          <itemizedlist>
            <listitem><para>Path</para></listitem>
            <listitem><para>Name</para></listitem>
            <listitem><para>URL</para></listitem>
            <listitem><para>Repository Root</para></listitem>
            <listitem><para>Repository UUID</para></listitem>
            <listitem><para>Revision</para></listitem>
            <listitem><para>Node Kind</para></listitem>
            <listitem><para>Last Changed Author</para></listitem>
            <listitem><para>Last Changed Revision</para></listitem>
            <listitem><para>Last Changed Date</para></listitem>
            <listitem><para>Lock Token</para></listitem>
            <listitem><para>Lock Owner</para></listitem>
            <listitem><para>Lock Created (date)</para></listitem>
            <listitem><para>Lock Expires (date)</para></listitem>
          </itemizedlist>

          <para>Tipos adicionais de informação disponíveis apenas para
            caminhos em cópias de trabalho são:</para>

          <itemizedlist>
            <listitem><para>Schedule</para></listitem>
            <listitem><para>Copied From URL</para></listitem>
            <listitem><para>Copied From Rev</para></listitem>
            <listitem><para>Text Last Updated</para></listitem>
            <listitem><para>Properties Last Updated</para></listitem>
            <listitem><para>Checksum</para></listitem>
            <listitem><para>Conflict Previous Base File</para></listitem>
            <listitem><para>Conflict Previous Working File</para></listitem>
            <listitem><para>Conflict Current Base File</para></listitem>
            <listitem><para>Conflict Properties File</para></listitem>
          </itemizedlist>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>Nenhum</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Nada</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Apenas se operando sobre URLs</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--recursive (-R)
--targets FILENAME
--incremental
--xml
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para><command>svn info</command> irá mostrar a você toda a
            informação útil que tiver para itens em sua cópia de
            trabalho.  Ele exibirá informações sobre arquivos:</para>

          <screen>
$ svn info foo.c
Path: foo.c
Name: foo.c
URL: http://svn.red-bean.com/repos/test/foo.c
Repository Root: http://svn.red-bean.com/repos/test
Repository UUID: 5e7d134a-54fb-0310-bd04-b611643e5c25
Revision: 4417
Node Kind: file
Schedule: normal
Last Changed Author: sally
Last Changed Rev: 20
Last Changed Date: 2003-01-13 16:43:13 -0600 (Mon, 13 Jan 2003)
Text Last Updated: 2003-01-16 21:18:16 -0600 (Thu, 16 Jan 2003)
Properties Last Updated: 2003-01-13 21:50:19 -0600 (Mon, 13 Jan 2003)
Checksum: d6aeb60b0662ccceb6bce4bac344cb66
</screen>

          <para>Ele também exibirá informações sobre diretórios:</para>

          <screen>
$ svn info vendors
Path: vendors
URL: http://svn.red-bean.com/repos/test/vendors
Repository Root: http://svn.red-bean.com/repos/test
Repository UUID: 5e7d134a-54fb-0310-bd04-b611643e5c25
Revision: 19
Node Kind: directory
Schedule: normal
Last Changed Author: harry
Last Changed Rev: 19
Last Changed Date: 2003-01-16 23:21:19 -0600 (Thu, 16 Jan 2003)
Properties Last Updated: 2003-01-16 23:39:02 -0600 (Thu, 16 Jan 2003)
</screen>

           <para><command>svn info</command> também funciona em URLs
             (perceba também que o arquivo readme.doc neste exemplo está
             travado, então a informação da trava também é
             exibida):</para>

           <screen>
$ svn info http://svn.red-bean.com/repos/test/readme.doc
Path: readme.doc
Name: readme.doc
URL: http://svn.red-bean.com/repos/test/readme.doc
Repository Root: http://svn.red-bean.com/repos/test
Repository UUID: 5e7d134a-54fb-0310-bd04-b611643e5c25
Revision: 1
Node Kind: file
Schedule: normal
Last Changed Author: sally
Last Changed Rev: 42
Last Changed Date: 2003-01-14 23:21:19 -0600 (Tue, 14 Jan 2003)
Lock Token: opaquelocktoken:14011d4b-54fb-0310-8541-dbd16bd471b2
Lock Owner: harry
Lock Created: 2003-01-15 17:35:12 -0600 (Wed, 15 Jan 2003)
Lock Comment (1 line):
My test lock comment
</screen>


          
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.list">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>list</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn list</refname>
          <refpurpose>Lista entradas de diretório no
            repositório.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn list [TARGET[@REV]...]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Lista cada arquivo em <replaceable>TARGET</replaceable>
            e o conteúdo de cada diretório em
            <replaceable>TARGET</replaceable> como existirem no
            repositório.  Se <replaceable>TARGET</replaceable> for um
            caminho em uma cópia de trabalho, a URL correspondente no
            repositório será usada.</para>

          <para>O <replaceable>TARGET</replaceable> padrão, quando não
            informado, é <quote><filename>.</filename></quote>,
            significando a URL correspondente ao diretório atual na
            cópia de trabalho.</para>

          <para>Com <option>--verbose</option>, <command>svn
            list</command> exibe os seguintes campos para cada
            item:</para>

          <itemizedlist>
            <listitem><para>Número da revisão do último
              commit</para></listitem>

            <listitem><para>Autor do último commit</para></listitem>

            <listitem><para>Se travado, a letra <quote>O</quote> (Veja
              <xref linkend="svn.ref.svn.c.info"/> para
              detalhes).</para></listitem>

            <listitem><para>Tamanho (em bytes)</para></listitem>

            <listitem><para>Data e horário do último
              commit</para></listitem>
          </itemizedlist>

          <para>Com <option>--xml</option>, a saída fica em um formato
            XML (com um cabeçalho e um elemento de documento
            encapsulador, a menos que <option>--incremental</option>
            também seja especificado).  Toda a informação está presente;
            a opção <option>--verbose</option> não é aceita.</para>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>ls</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Nada</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Sim</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--verbose (-v)
--recursive (-R)
--incremental
--xml
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para><command>svn list</command> é mais útil se você quiser
            ver que arquivos um repositório tem sem precisar obter uma
            cópia de trabalho:</para>

          <screen>
$ svn list http://svn.red-bean.com/repos/test/support
README.txt
INSTALL
examples/
&hellip;
</screen>

          <para>Você pode passar a opção <option>--verbose</option> para
            informações adicionais, similar ao comando UNIX 
            <command>ls -l</command>:</para>

          <screen>
$ svn list --verbose file:///tmp/repos
     16 sally         28361 Jan 16 23:18 README.txt
     27 sally             0 Jan 18 15:27 INSTALL
     24 harry               Jan 18 11:27 examples/
</screen>

          <para>Para mais detalhes, veja <xref
            linkend="svn.tour.history.browsing.list"/>.</para>

        </refsect1>
      </refentry>


      <refentry id="svn.ref.svn.c.lock">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>lock</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn lock</refname> 
            <refpurpose>Trava caminhos na cópia de trabalho ou em URLs
              no repositório, assim nenhum outro usuário poderá submeter
              alterações neles.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn lock TARGET...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Trava cada <replaceable>TARGET</replaceable>.  Se algum
            <replaceable>TARGET</replaceable> já estiver travado por
            outro usuário, exibe uma mensagem de aviso e continua
            travando os demais <replaceable>TARGET</replaceable>s
            informados.  Use <option>--force</option> para roubar uma
            trava de outro usuário ou cópia de trabalho.</para>

        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>Nenhum</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho, Repositório</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Sim</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--targets FILENAME
--message (-m) TEXT
--file (-F) FILE
--force-log
--encoding ENC
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
--force
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Trava dois arquivos em sua cópia de trabalho:</para>

          <screen>

$ svn lock tree.jpg house.jpg
'tree.jpg' locked by user 'harry'.
'house.jpg' locked by user 'harry'.
</screen>

          <para>Trava um arquivo em sua cópia de trabalho que já estava
            travado por outro usuário:</para>

          <screen>
$ svn lock tree.jpg
svn: warning: Path '/tree.jpg is already locked by user 'sally in \
     filesystem '/svn/repos/db'

$ svn lock --force tree.jpg
'tree.jpg' locked by user 'harry'.
</screen>

          <para>Trava um arquivo sem uma cópia de trabalho:</para>

          <screen>
$ svn lock http://svn.red-bean.com/repos/test/tree.jpg
'tree.jpg' locked by user 'harry'.
</screen>

          <para>Para mais detalhes, veja <xref
            linkend="svn.advanced.locking"/>.</para>

        </refsect1>
      </refentry>


      <refentry id="svn.ref.svn.c.log">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>log</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn log</refname>
          <refpurpose>Exibe as mensagens de log submetidas.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn log [PATH]</programlisting>
          <programlisting>svn log URL [PATH...]</programlisting>
          <programlisting>svn log URL[@REV] [PATH...]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Exibe mensagens de log do repositório.  Se nenhum
            argumento for informado, <command>svn log</command> exibe as
            mensagens de log para todos os arquivos e diretórios dentro
            do diretório atual (inclusive) de sua cópia de trabalho.
            Você pode refinar os resultados especificando um caminho,
            uma ou mais revisões, ou qualquer combinação das duas.  O
            intervalo padrão de revisões para caminhos locais é
            <literal>BASE:1</literal>.</para>

          <para>Se você especificar uma URL sozinha, então o comando
            exibe as mensagens de log para tudo o que a URL contiver.
            Se você adicionar caminhos depois da URL, apenas as
            mensagens para estes caminhos sob a URL serão exibidas.  O
            intervalo padrão de revisões para uma URL é
            <literal>HEAD:1</literal>.</para>

          <para>Com <option>--verbose</option>, <command>svn
            log</command> também irá exibir todos os caminhos afetados
            com cada mensagem de log.  Com <option>--quiet</option>,
            <command>svn log</command> não irá exibir o corpo da
            mensagem de log em si (isto é compatível com
            <option>--verbose</option>).</para>

          <para>Cada mensagem de log é exibida apenas uma vez, mesmo se
            mais de um dos caminhos afetados por aquela revisão forem
            solicitados explicitamente.  As mensagens de log seguem o
            histórico de cópias por padrão.  Use
            <option>--stop-on-copy</option> para desabilitar este
            comportamento, o que pode ser útil para determinar pontos de
            ramificação.</para>

        </refsect1>
        <refsect1>
          <title>Nomes Alternativos</title>
          <para>Nenhum</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Nada</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Sim</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--quiet (-q)
--verbose (-v)
--targets FILENAME
--stop-on-copy
--incremental
--limit NUM
--xml
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Você pode ver as mensagens de log para todos os caminhos
            que sofreram alterações em sua cópia de trabalho, executando
            <command>svn log</command> a partir da raiz da mesma:</para>

          <screen>
$ svn log
------------------------------------------------------------------------
r20 | harry | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line

Tweak.
------------------------------------------------------------------------
r17 | sally | 2003-01-16 23:21:19 -0600 (Thu, 16 Jan 2003) | 2 lines
&hellip;
</screen>

          <para>Examine todas as mensagens de log para um dado arquivo
            em sua cópia de trabalho:</para>

          <screen>
$ svn log foo.c
------------------------------------------------------------------------
r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line

Added defines.
------------------------------------------------------------------------
r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines
&hellip;
</screen>

          <para>Se você não tiver uma cópia de trabalho à mão, você pode
            obter as mensagens de log a partir de uma URL:</para>

          <screen>
$ svn log http://svn.red-bean.com/repos/test/foo.c
------------------------------------------------------------------------
r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line

Added defines.
------------------------------------------------------------------------
r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines
&hellip;
</screen>

          <para>Se você quiser as mensagens de diversos arquivos sob uma
            mesma URL, você pode usar a sintaxe <literal>URL
            [PATH...]</literal>.</para>

          <screen>
$ svn log http://svn.red-bean.com/repos/test/ foo.c bar.c
------------------------------------------------------------------------
r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line

Added defines.
------------------------------------------------------------------------
r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line

Added new file bar.c
------------------------------------------------------------------------
r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines
&hellip;
</screen>

          <para>Quando estiver concatenando os resultados de múltiplas
            chamadas ao comando log, você também pode usar a opção
            <option>--incremental</option>.  O <command>svn
            log</command> normalmente exibe uma linha tracejada no
            começo de cada mensagem de log, depois de cada mensagem de
            log subsequente, e após a última mensagem de log.  Se você
            executou o <command>svn log</command> com um intervalo de
            revisões, você deve ter obtido isto:</para>
          <screen>
$ svn log -r 14:15
------------------------------------------------------------------------
r14 | &hellip;

------------------------------------------------------------------------
r15 | &hellip;

------------------------------------------------------------------------
</screen>

          <para>Entretanto, se você queria gravar duas mensagens de
            log não-sequenciais em um arquivo, você poderia ter feito
            algo assim:</para>

          <screen>
$ svn log -r 14 &gt; mylog
$ svn log -r 19 &gt;&gt; mylog
$ svn log -r 27 &gt;&gt; mylog
$ cat mylog
------------------------------------------------------------------------
r14 | &hellip;

------------------------------------------------------------------------
------------------------------------------------------------------------
r19 | &hellip;

------------------------------------------------------------------------
------------------------------------------------------------------------
r27 | &hellip;

------------------------------------------------------------------------
</screen>

          <para>Você pode evitar a bagunça das duplas linhas tracejadas
            em sua saída usando a opção incremental:</para>


          <screen>
$ svn log --incremental -r 14 &gt; mylog
$ svn log --incremental -r 19 &gt;&gt; mylog
$ svn log --incremental -r 27 &gt;&gt; mylog
$ cat mylog
------------------------------------------------------------------------
r14 | &hellip;

------------------------------------------------------------------------
r19 | &hellip;

------------------------------------------------------------------------
r27 | &hellip;
</screen>

          <para>A opção <option>--incremental</option> resulta em um
            controle da saída semelhante também quando usada com a opção
            <option>--xml</option>.</para>



          <tip>
            <para>Se você executar <command>svn log</command> em um dado
              específico e informar uma revisão específica e não obtiver
              nada como saída</para>

            <screen>
$ svn log -r 20 http://svn.red-bean.com/untouched.txt
------------------------------------------------------------------------
</screen>

            <para>Isto apenas significa que aquele caminho não foi
              modificado naquela revisão.  Se você obtiver o log a
              partir da raiz do repositório, ou souber o arquivo que foi
              alterado naquela revisão, você pode especificá-lo
              explicitamente:</para>
            
            <screen>
$ svn log -r 20 touched.txt 
------------------------------------------------------------------------
r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line

Made a change.
------------------------------------------------------------------------
</screen>
          </tip>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.merge">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>merge</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn merge</refname>
          <refpurpose>Aplica as diferenças entre duas fontes para um
            caminho numa cópia de trabalho.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn merge [-c M | -r N:M] SOURCE[@REV] [WCPATH]</programlisting>
          <programlisting>svn merge sourceURL1[@N] sourceURL2[@M] [WCPATH]</programlisting>
          <programlisting>svn merge sourceWCPATH1@N sourceWCPATH2@M [WCPATH]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Na primeira e na segunda formas, os caminhos de origem
            (URLs na primeira forma, caminhos na cópia de trabalho na
            segunda) são especificados nas revisões
            <replaceable>N</replaceable> e
            <replaceable>M</replaceable>.  Estas são as duas fontes a
            serem comparadas.  A revisão padrão, quando omitida, será
            <literal>HEAD</literal>.</para>

          <para>A opção <literal>-c M</literal> é equivalente a
            <literal>-r N:M</literal> onde <replaceable>N =
            M-1</replaceable>.  Usar <literal>-c -M</literal> faz o
            inverso: <literal>-r M:N</literal> onde
            <replaceable>N = M-1</replaceable>.</para>

          <para>Na terceira forma, <replaceable>SOURCE</replaceable>
            pode ser uma URL ou um item numa cópia de trabalho, neste
            caso a URL correspondente é usada.  Esta URL, nas revisões
            <replaceable>N</replaceable> e
            <replaceable>M</replaceable>, define as duas fontes a serem
            comparadas.</para>

          <para><replaceable>WCPATH</replaceable> é o caminho na cópia
            de trabalho que irão receber as alterações.  Se 
            <replaceable>WCPATH</replaceable> for omitido, será assumido
            <quote><filename>.</filename></quote> como valor padrão, a
            menos que as fontes tenham nomes de base idênticos que
            correspondam a um arquivo dentro de
            <quote><filename>.</filename></quote>: neste caso, as
            diferenças serão aplicadas àquele arquivo.</para>

          <para>Diferentemente do <command>svn diff</command>, o comando
            merge leva os diretórios anteriores de um arquivo em
            consideração ao executar uma operação de mesclagem.  Isto é
            muito importante quando você estiver juntando as alterações
            feitas de um ramo para outro e tiver renomeado um arquivo em
            um ramo mas não em outro.</para>

        </refsect1>
        <refsect1>
          <title>Nomes Alternativos</title>
          <para>Nenhum</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Apenas se trabalhando com URLs</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--change (-c) REV
--non-recursive (-N)
--quiet (-q)
--force
--dry-run
--diff3-cmd CMD
--extensions (-x) ARG
--ignore-ancestry
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Mescla um ramo de volta ao trunk (assumindo que você tem
            uma cópia de trabalho de trunk, e que o ramo tenha sido
            criado na revisão 250):</para>

          <screen>
$ svn merge -r 250:HEAD http://svn.red-bean.com/repos/branches/my-branch
U  myproj/tiny.txt
U  myproj/thhgttg.txt
U  myproj/win.txt
U  myproj/flo.txt
</screen>

          <para>Se você tiver feito a ramificação na revisão 23, e
            quiser mesclar as alterações feitas no trunk para seu ramo,
            você pode fazer isto de dentro da cópia de trabalho de seu
            ramo:</para>

          <screen>
$ svn merge -r 23:30 file:///tmp/repos/trunk/vendors
U  myproj/thhgttg.txt
&hellip;
</screen>
          
        <para>Para mesclar as alterações em um único arquivo:</para>

        <screen>
$ cd myproj
$ svn merge -r 30:31 thhgttg.txt 
U  thhgttg.txt
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.mkdir">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>mkdir</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn mkdir</refname>
          <refpurpose>Cria um novo diretório sob controle de versão.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn mkdir PATH...</programlisting>
          <programlisting>svn mkdir URL...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Cria um diretório com o nome dado pelo último componente
            de <replaceable>PATH</replaceable> ou da URL.  Um diretório
            especificado por <replaceable>PATH</replaceable> como um
            caminho na cópia de trabalho é agendado para adição.  Um
            diretório especificado por uma URL é criado no repositório
            por meio de um commit imediato.  Múltiplas URLs de diretório
            são submetidas atomicamente.  Em ambos os casos, todos os
            diretórios intermediários já devem existir.</para>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>Nenhum</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho, repositório se executando sobre uma URL</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Apenas se executando sobre uma URL</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--message (-m) TEXT
--file (-F) FILE
--quiet (-q)
--username USER
--password PASS
--no-auth-cache
--non-interactive
--editor-cmd EDITOR
--encoding ENC
--force-log
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Cria um diretório em sua cópia de trabalho:</para>

          <screen>
$ svn mkdir newdir
A         newdir
</screen>

          <para>Cria um diretório no repositório (submissão instantânea,
            então uma mensagem de log é requerida):</para>

          <screen>
$ svn mkdir -m "Making a new dir." http://svn.red-bean.com/repos/newdir

Committed revision 26.
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.move">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>move</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn move</refname>
          <refpurpose>Move um arquivo ou diretório.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn move SRC DST</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Este comando move um arquivo ou diretório em sua cópia
            de trabalho ou no repositório.</para>

          <tip>
            <para>Este comando é equivalente a um <command>svn
              copy</command> seguido de um <command>svn
              delete</command>.</para>
          </tip>

          <note>
            <para>O Subversion não movimentação entre cópias de trabalho
              e URLs.  Além disso, você só pode mover arquivos dentro
              de um único repositório&mdash;o Subversion não suporta
              movimentação entre repositórios.</para>
          </note>

          <variablelist>

            <varlistentry>
              <term>WC  -&gt; WC</term>
              <listitem>
                <para>Move e agenda um arquivo ou diretório para adição
                  (com histórico).</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>URL -&gt; URL</term>
              <listitem>
                <para>Renomeação inteiramente no lado do servidor.</para>
              </listitem>
            </varlistentry>

          </variablelist>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>mv, rename, ren</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho, repositório se executando sobre uma URL</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Apenas se executando sobre uma URL</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--message (-m) TEXT
--file (-F) FILE
--revision (-r) REV (<emphasis>Obsoleto</emphasis>)
--quiet (-q)
--force
--username USER
--password PASS
--no-auth-cache
--non-interactive
--editor-cmd EDITOR
--encoding ENC
--force-log
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Move um arquivo em sua cópia de trabalho:</para>

          <screen>
$ svn move foo.c bar.c
A         bar.c
D         foo.c
</screen>

          <para>Move um arquivo no repositório (commit imediato,
            necessitando, então, de uma mensagem de log):</para>

          <screen>
$ svn move -m "Move a file" http://svn.red-bean.com/repos/foo.c \
                            http://svn.red-bean.com/repos/bar.c

Committed revision 27.
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.propdel">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>propdel</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn propdel</refname>
          <refpurpose>Remove uma propriedade de um item.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn propdel PROPNAME [PATH...]</programlisting>
          <programlisting>svn propdel PROPNAME --revprop -r REV [TARGET]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Este comando remove as propriedades de arquivos,
            diretórios, ou revisões.  A primeira forma remove
            propriedades versionadas em sua cópia de trabalho, enquanto
            que a segunda remove propriedades não-versionadas remotas em
            uma revisão no repositório (<replaceable>TARGET</replaceable>
            apenas determina qual repositório acessar).</para>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>pdel, pd</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho, repositório apenas se executando
            sobre uma URL</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Apenas se executando sobre uma URL</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--quiet (-q)
--recursive (-R)
--revision (-r) REV
--revprop
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Remove uma propriedade de um arquivo em sua cópia de
            trabalho</para>

          <screen>
$ svn propdel svn:mime-type  some-script
property 'svn:mime-type' deleted from 'some-script'.
</screen>

          <para>Remove uma propriedade de uma revisão:</para>

          <screen>
$ svn propdel --revprop -r 26 release-date 
property 'release-date' deleted from repository revision '26'
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.propedit">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>propedit</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn propedit</refname>
          <refpurpose>Edita a propriedade de um ou mais itens sob
            controle de versão.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn propedit PROPNAME PATH...</programlisting>
          <programlisting>svn propedit PROPNAME --revprop -r REV [TARGET]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Edita uma ou mais propriedades usando seu editor
            preferido.  A primeira forma edita propriedades versionadas
            em sua cópia de trabalho, enquanto que a segunda edita
            propriedades não-versionadas remotas em uma revisão de
            repositório (<replaceable>TARGET</replaceable> apenas
            determina qual repositório acessar).</para>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>pedit, pe</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho, repositório apenas se executando sobre uma URL</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Apenas se executando sobre uma URL</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--revprop
--username USER
--password PASS
--no-auth-cache
--non-interactive
--encoding ENC
--editor-cmd EDITOR
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para><command>svn propedit</command> facilita a modificação
            de propriedades que tenham múltiplos valores:</para>

          <screen>
$ svn propedit svn:keywords  foo.c 
    &lt;svn will launch your favorite editor here, with a buffer open
    containing the current contents of the svn:keywords property.  You
    can add multiple values to a property easily here by entering one
    value per line.&gt;
Set new value for property 'svn:keywords' on 'foo.c'
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.propget">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>propget</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn propget</refname>
          <refpurpose>Exibe o valor de uma propriedade.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn propget PROPNAME [TARGET[@REV]...]</programlisting>
          <programlisting>svn propget PROPNAME --revprop -r REV [URL]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Exibe o valor de uma propriedade de arquivos, diretórios
            ou revisões.  A primeira forma exibe a propriedade
            versionada de um item ou itens em sua cópia de trabalho,
            enquanto que a segunda exibe propriedades remotas
            não-versionadas em uma revisão de repositório.  Veja <xref
            linkend="svn.advanced.props"/> para mais informações sobre
            propriedades.</para>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>pget, pg</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho, repositório apenas se executando sobre uma URL</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Apenas se executando sobre uma URL</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--recursive (-R)
--revision (-r) REV
--revprop
--strict
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Examina uma propriedade de um arquivo em sua cópia de
            trabalho:</para>
          
          <screen>
$ svn propget svn:keywords foo.c
Author
Date
Rev
</screen>

          <para>O mesmo para revisões de propriedades:</para>

          <screen>
$ svn propget svn:log --revprop -r 20 
Began journal.
</screen>
          
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.proplist">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>proplist</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn proplist</refname>
          <refpurpose>Lista todas as propriedades.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn proplist [TARGET[@REV]...]</programlisting>
          <programlisting>svn proplist --revprop -r REV [TARGET]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Lista todas as propriedades de arquivos, diretórios, ou
            revisões.  A primeira forma lista propriedades versionadas
            em sua cópia de trabalho, enquanto que a segunda lista
            propriedades remotas não-versionadas em uma revisão de
            repositório (<replaceable>TARGET</replaceable> apenas
            determina que repositório acessar).</para>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>plist, pl</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho, repositório apenas se executando sobre uma URL</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Apenas se executando sobre uma URL</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--verbose (-v)
--recursive (-R)
--revision (-r) REV
--quiet (-q)
--revprop
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>
        
        <refsect1>
          <title>Exemplos</title>

          <para>Você pode usar proplist para ver as propriedades de um
            item em sua cópia de trabalho:</para>

          <screen>
$ svn proplist foo.c
Properties on 'foo.c':
  svn:mime-type
  svn:keywords
  owner
</screen>

          <para>Mas com a opção <option>--verbose</option>, o svn
            proplist torna-se extremamente útil pois também lhe mostra
            os valores das propriedades:</para>

          <screen>
$ svn proplist --verbose foo.c
Properties on 'foo.c':
  svn:mime-type : text/plain
  svn:keywords : Author Date Rev
  owner : sally
</screen>
          
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.propset">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>propset</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn propset</refname>
          <refpurpose>Define PROPNAME para PROPVAL em arquivos, diretórios, ou revisões.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn propset PROPNAME [PROPVAL | -F VALFILE] PATH...</programlisting>
          <programlisting>svn propset PROPNAME --revprop -r REV [PROPVAL | -F VALFILE] [TARGET]</programlisting>
        </refsect1>

        <refsect1>
          <title>Descrição</title>

          <para>Define <replaceable>PROPNAME</replaceable> para
            <replaceable>PROPVAL</replaceable> em arquivos, diretórios,
            ou revisões.  O primeiro exemplo cria uma modificação numa
            propriedade local, versionada, na cópia de trabalho; e o
            segundo cria uma modificação numa propriedade remota,
            não-versionada, em uma revisão de repositório
            (<replaceable>TARGET</replaceable> apenas determina que
            repositório acessar).</para>

          <tip>
            <para>O Subversion tem um conjunto de propriedades
              <quote>especiais</quote> que afetam seu comportamento.
              Veja <xref linkend="svn.ref.properties"/> para mais sobre
              estas propriedades.</para>
          </tip>

        </refsect1>
        <refsect1>
          <title>Nomes Alternativos</title>
          <para>pset, ps</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho, repositório apenas se executando sobre uma URL</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Apenas se executando sobre uma URL</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--file (-F) FILE
--quiet (-q)
--revision (-r) REV
--targets FILENAME
--recursive (-R)
--revprop
--username USER
--password PASS
--no-auth-cache
--non-interactive
--encoding ENC
--force
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Define o tipo mime de um arquivo:</para>

          <screen>
$ svn propset svn:mime-type image/jpeg foo.jpg 
property 'svn:mime-type' set on 'foo.jpg'
</screen>

          <para>Em um sistema UNIX, se você quiser que um arquivo tenha
            a permissão de execução definida:</para>

          <screen>
$ svn propset svn:executable ON somescript
property 'svn:executable' set on 'somescript'
</screen>

          <para>Talvez você tenha uma política interna que defina certas
            propriedades para beneficiar seus colaboradores:</para>

          <screen>
$ svn propset owner sally foo.c
property 'owner' set on 'foo.c'
</screen>

          <para>Se você se enganar escrevendo uma mensagem de log para
            uma dada revisão e quiser mudá-la, use
            <option>--revprop</option> e atribua o valor de 
            <literal>svn:log</literal> para  a nova mensagem de
            log:</para>

          <screen>
$ svn propset --revprop -r 25 svn:log "Journaled about trip to New York."
property 'svn:log' set on repository revision '25'
</screen>

          <para>Ou, se você não tiver uma cópia de trabalho, você pode
            informar uma URL.</para>
          
          <screen>
$ svn propset --revprop -r 26 svn:log "Document nap." http://svn.red-bean.com/repos
property 'svn:log' set on repository revision '25'
</screen>

          <para>Por fim, você pode informar ao propset para obter suas
            entradas a partir de um arquivo.  Você ainda pode usar isso
            para definir o conteúdo de uma propriedade para qualquer
            valor binário:</para>

          <screen>
$ svn propset owner-pic -F sally.jpg moo.c 
property 'owner-pic' set on 'moo.c'
</screen>

          <note>
            <para>Por padrão, você não pode modificar propriedades de
              revisão em um repositório Subversion.  O administrador de
              seu repositório deve explicitamente permitir modificações
              em revisões de propriedades criando um script de extensão
              (<foreignphrase>hook</foreignphrase>) chamado 
              <literal>pre-revprop-change</literal>.  Veja <xref
              linkend="svn.reposadmin.create.hooks"/> para mais
              informações sobre scripts de extensão.</para>
          </note>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.resolved">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>resolved</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn resolved</refname>
          <refpurpose>Remove arquivo ou diretórios da cópia de trabalho
            do estado de <quote>conflito</quote>.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn resolved PATH...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Remove o estado de <quote>conflito</quote> em arquivos
            ou diretórios numa cópia de trabalho.  Esta rotina não
            resolve marcadores de conflito semanticamente; ele apenas
            remove os arquivos auxiliares relacionados ao conflito e
            permite que o <replaceable>PATH</replaceable> possa ser
            submetido novamente; isto é, ele informa ao Subversion que
            o conflito foi <quote>resolvido</quote>.  Leia <xref
            linkend="svn.tour.cycle.resolve"/> para uma visão mais
            aprofundada sobre resolução de conflitos.</para> </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>Nenhum</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Não</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--targets FILENAME
--recursive (-R)
--quiet (-q)
--config-dir DIR
</screen>
        </refsect1>
        
        <refsect1>
          <title>Exemplos</title>
          
          <para>Se você obtiver um conflito em uma atualização, sua
            cópia de trabalho irá gerar três novos arquivos:</para>

          <screen>
$ svn update
C  foo.c
Updated to revision 31.
$ ls
foo.c
foo.c.mine
foo.c.r30
foo.c.r31
</screen>

          <para>Uma vez que você tenha resolvido o conflito e que
            <filename>foo.c</filename> esteja pronto para ser submetido,
            execute o comando <command>svn resolved</command> para fazer
            com que sua cópia de trabalho saiba que você já cuidou de
            tudo.</para>

          <warning>
            <para>Você <emphasis>pode</emphasis> apenas remover os
              arquivos relacionados ao conflito e realizar a operação de
              commit, mas o <command>svn resolved</command> corrige
              alguns dados de registro na área administrativa na cópia
              de trabalho além de remover os arquivos conflituosos, de
              forma que recomendamos que você utilize este
              comando.</para>
          </warning>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.revert">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>revert</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn revert</refname>
          <refpurpose>Desfaz todas as edições locais.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn revert PATH...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Reverte quaisquer alterações feitas em um arquivo ou
            diretório e resolve quaisquer estados de conflito.
            <command>svn revert</command> não apenas irá reverter o
            conteúdo de um item em sua cópia de trabalho mas também
            quaisquer modificação de propriedades.  Finalmente, você
            pode usá-lo para desfazer qualquer operação de agendamento
            que você possa ter feito (p.ex., arquivos agendados para
            adição ou remoção podem ser
            <quote>desagendados</quote>).</para>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>Nenhum</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Não</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--targets FILENAME
--recursive (-R)
--quiet (-q)
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Descarta as alterações em um arquivo:</para>

          <screen>
$ svn revert foo.c
Reverted foo.c
</screen>

          <para>Se você quiser reverter um diretório inteiro de arquivos, use a
            opção <option>--recursive</option>:</para>

          <screen>
$ svn revert --recursive .
Reverted newdir/afile
Reverted foo.c
Reverted bar.txt
</screen>

          <para>Por último, você pode desfazer quaisquer operações de
            agendamento:</para>

          <screen>
$ svn add mistake.txt whoops
A         mistake.txt
A         whoops
A         whoops/oopsie.c

$ svn revert mistake.txt whoops
Reverted mistake.txt
Reverted whoops

$ svn status
?      mistake.txt
?      whoops
</screen>

          <warning>
            <para>O <command>svn revert</command> intrinsecamente
              perigoso, já que todo o seu propósito é descartar
              dados&mdash;especificamente, modificações não submetidas
              ao repositório.  Uma vez que você tenha feito uma
              reversão, o Subversion <emphasis>não disponibiliza nenhuma
              forma</emphasis> de obter estes dados de suas alterações
              não submetidas.</para>

            <para>Se você não informar um alvo para o <command>svn
              revert</command>, ele não fará nada&mdash;para protegê-lo
              de perder suas alterações acidentalmente em sua cópia de
              trabalho, o <command>svn revert</command> requer que você
              informe pelo menos um alvo.</para>
          </warning>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.status">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>status</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn status</refname>
          <refpurpose>Exibe informação sobre o estado de arquivos e
            diretórios na cópia de trabalho.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn status [PATH...]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Exibe informação sobre o estado de arquivos e diretórios
            na cópia de trabalho.  Sem argumentos, o comando exibe
            apenas os itens modificados localmente (sem acesso ao
            repositório).  Com <option>--show-updates</option>, ele
            adiciona informação sobre a revisão de trabalho e
            informações defasadas de servidor.  Com
            <option>--verbose</option>, exibe informações completas
            sobre revisão de cada item.</para>

          <para>As primeiras seis colunas na saída têm um caractere de
            largura cada, e cada coluna lhe dá informação sobre
            diferentes aspectos de cada item na cópia de
            trabalho.</para>
          
          <para>A primeira coluna indica que um item foi adicionado,
            removido, ou então alterado.</para>

          <variablelist>
            
            <varlistentry>
              <term>' '</term>
              <listitem>
                <para>Sem modificações.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'A'</term>
              <listitem>
                <para>O item foi agendado para adição.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'D'</term>
              <listitem>
                <para>O item foi agendado para remoção (deleção).</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'M'</term>
              <listitem>
                <para>O item está sendo modificado.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'R'</term>
              <listitem>
                <para>O item foi substituído em sua cópia de trabalho.
                Isto significa que o arquivo foi agendado para remoção,
                e então um novo arquivo com o mesmo nome foi agendado
                para adição em seu lugar.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'C'</term>
              <listitem>
                <para>O conteúdo (ao contrário das propriedades) do item
                  entra em conflito com as atualizações recebidas do
                  repositório.</para>  
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'X'</term>
              <listitem>
                <para>O item está presente devido a uma definição externa.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'I'</term>
              <listitem>
                <para>O item está sendo ignorado (p.ex., com a
                  propriedade <literal>svn:ignore</literal>).</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'?'</term>
              <listitem>
                <para>O item não está sob controle de versão.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'!'</term>
              <listitem>
                <para>O item está faltando (p.ex., você o moveu ou
                  removeu sem usar o <command>svn</command>).  Isto
                  também indica que um diretório está incompleto (uma
                  operação de checkout ou update foi
                  interrompida).</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'~'</term>
              <listitem>
                <para>O item está versionado como um tipo de objeto (
                  arquivo, diretório, link), mas está sendo substituído
                  por um tipo diferente de objeto.</para>
              </listitem>
            </varlistentry>

          </variablelist>

          <para>A segunda coluna indica o estado das propriedades de um
            arquivo ou diretório.</para>

          <variablelist>
            
            <varlistentry>
              <term>' '</term>
              <listitem>
                <para>Sem modificações.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'M'</term>
              <listitem>
                <para>Propriedades deste item foram modificadas.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'C'</term>
              <listitem>
                <para>As propriedades para este item entram em conflito
                  com as atualizações de propriedades recebidas do
                  repositório.</para>
              </listitem>
            </varlistentry>

          </variablelist>

          <para>A terceira coluna é preenchida apenas se a cópia de
            trabalho estiver travada.  (Veja
            <xref linkend="svn.tour.cleanup"/>.)</para>

          <variablelist>
            
            <varlistentry>
              <term>' '</term>
              <listitem>
                <para>O item não está travado.</para>
              </listitem>
            </varlistentry>
            
            <varlistentry>
              <term>'L'</term>
              <listitem>
                <para>O item está travado.</para>
              </listitem>
            </varlistentry>

          </variablelist>

          <para>A quarta coluna é preenchida se o item estiver agendado
            para adição com histórico.</para>
          
          <variablelist>
            
            <varlistentry>
              <term>' '</term>
              <listitem>
                <para>O histórico não está agendado para submissão.</para>
              </listitem>
            </varlistentry>
            
            <varlistentry>
              <term>'+'</term>
              <listitem>
                <para>O histórico está agendado para submissão.</para>
              </listitem>
            </varlistentry>

          </variablelist>

          <para>A quinta coluna é preenchida apenas se o item tiver sido
            trocado relativo a seus diretórios anteriores (veja <xref
            linkend="svn.branchmerge.switchwc"/>).</para>

          <variablelist>
            
            <varlistentry>
              <term>' '</term>
              <listitem>
                <para>O item é filho de seu diretório pai.</para>
              </listitem>
            </varlistentry>
            
            <varlistentry>
              <term>'S'</term>
              <listitem>
                <para>O item foi trocado.</para>
              </listitem>
            </varlistentry>

          </variablelist>

          <para>A sexta coluna contém informação sobre trava.</para>
          
          <variablelist>
            
            <varlistentry>
              <term>' '</term>
              <listitem>
                <para>Quando <option>--show-updates</option> é usado,
                o arquivo não está travado.  Se 
                <option>--show-updates</option> <emphasis>não</emphasis>
                é usado, isto apenas significa que o arquivo não está
                travado nesta cópia de trabalho.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>K</term>
              <listitem>
                <para>O arquivo está travado nesta cópia de
                trabalho.</para>
              </listitem>
            </varlistentry>
            
            <varlistentry>
              <term>O</term>
              <listitem>
                <para>O arquivo ou está travado por outro usuário ou em
                outra cópia de trabalho.  Isto só aparece quando 
                <option>--show-updates</option> é usado.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>T</term>
              <listitem>
                <para>O arquivo estava travado nesta cópia de trabalho,
                mas a trava foi <quote>roubada</quote> e está inválida.
                O arquivo atualmente está travado no repositório.  Isto
                só aparece quando <option>--show-updates</option> é
                usado.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>B</term>
              <listitem>
                <para>O arquivo estava travado nesta cópia de trabalho,
                mas a trava está sendo <quote>quebrada</quote> e está
                inválida.  O arquivo não está mais travado.  Isto só
                aparece quando <option>--show-updates</option> é
                usado</para>
              </listitem>
            </varlistentry>

          </variablelist>




          <para>A informação defasada aparece na sétima coluna (apenas
            se você passar a opção
            <option>--show-updates</option>).</para>

          <variablelist>
            
            <varlistentry>
              <term>' '</term>
              <listitem>
                <para>O item em sua cópia de trabalho está atualizado.</para>
              </listitem>
            </varlistentry>
            
            <varlistentry>
              <term>'*'</term>
              <listitem>
                <para>Uma nova revisão do item existe no servidor.</para>
              </listitem>
            </varlistentry>

          </variablelist>

          <para>Os campos restantes têm largura variável e são
            delimitados por espaços.  A revisão de trabalho é o próximo
            campo se as opções <option>--show-updates</option> ou
            <option>--verbose</option> forem passadas.</para>
          
          <para>Se a opção <option>--verbose</option> for passada, a
            última revisão submetida e o último autor são exibidos na
            sequência.</para>
          
          <para>O caminho na cópia de trabalho é sempre o último campo,
            então ele pode incluir espaços.</para>

        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>stat, st</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Nada</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Apenas quando usando <option>--show-updates</option></para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--show-updates (-u)
--verbose (-v)
--non-recursive (-N)
--quiet (-q)
--no-ignore
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
--ignore-externals
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Esta é a forma mais fácil de encontrar quais alterações
            você fez em sua cópia de trabalho:</para>

          <screen>
$ svn status wc
 M     wc/bar.c
A  +   wc/qax.c
</screen>

          <para>Se você quiser encontrar quais arquivos em sua cópia de
            trabalho estão desatualizados, passe a opção 
            <option>--show-updates</option> (isto
            <emphasis>não</emphasis> faz quaisquer alterações em sua
            cópia de trabalho).  Aqui você pode ver que 
            <filename>wc/foo.c</filename> foi modificado no repositório
            desde a última atualização em sua cópia de trabalho:</para>

          <screen>
$ svn status --show-updates wc
 M           965    wc/bar.c
       *     965    wc/foo.c
A  +         965    wc/qax.c
Status against revision:    981
</screen>

          <note>
            <para><option>--show-updates</option>
              <emphasis>apenas</emphasis> coloca um asterisco próximo
              aos itens que estão desatualizados (isto é, os itens que
              serão atualizados a partir do repositório se você executar
              um <command>svn update</command>).
              <option>--show-updates</option> <emphasis>não</emphasis>
              faz com que a listagem de estado reflita a versão de
              repositório do item (apesar de que  você pode ver o número
              de revisão do repositório passando a opção
              <option>--verbose</option>).</para>
          </note>

          <para>E finalmente, o máximo de informação que você pode obter
            com o subcomando status:</para>

          <screen>
$ svn status --show-updates --verbose wc
 M           965       938 sally        wc/bar.c
       *     965       922 harry        wc/foo.c
A  +         965       687 harry        wc/qax.c
             965       687 harry        wc/zig.c
Head revision:   981
</screen>

          <para>Para mais exemplos de <command>svn status</command>,
            veja <xref linkend="svn.tour.cycle.examine.status"/>.</para>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svn.c.switch">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>switch</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn switch</refname>
          <refpurpose>Atualiza a cópia de trabalho para uma URL diferente.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn switch URL [PATH]</programlisting>

          <programlisting>switch --relocate FROM TO [PATH...]</programlisting>


        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>A primeira variante deste subcomando (sem a opção
            <option>--relocate</option>) atualiza sua cópia de trabalho
            para apontar para uma nova URL&mdash;frequentemente uma URL
            que compartilhe um ancestral comum com sua cópia de
            trabalho, apesar de não ser necessário.  Esta é a forma que
            o Subversion usa para mover uma cópia de trabalho para um
            novo ramo.  Consulte <xref
            linkend="svn.branchmerge.switchwc"/> para uma visão mais
            aprofundada sobre este recurso.</para>

          <para>
            A opção <option>--relocate</option> faz com que o
            <command>svn switch</command> execute algo diferente: ele
            atualiza sua cópia de trabalho para apontar para <emphasis>o
            mesmo</emphasis> diretório no repositório, apenas numa URL
            diferente (tipicamente porque um administrador moveu o
            repositório para um outro servidor, ou para outra URL no
            mesmo servidor).</para>

        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>sw</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Sim</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--non-recursive (-N)
--quiet (-q)
--diff3-cmd CMD
--relocate FROM TO
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
</screen>
        </refsect1>
        
        <refsect1>
          <title>Exemplos</title>

          <para>Se você atualmente dentro do diretório 
            <filename>vendors</filename>, o qual foi ramificado para
            <filename>vendors-with-fix</filename>, e você gostaria de
            trocar sua cópia de trabalho para esse ramo:</para>

          <screen>
$ svn switch http://svn.red-bean.com/repos/branches/vendors-with-fix .
U  myproj/foo.txt
U  myproj/bar.txt
U  myproj/baz.c
U  myproj/qux.c
Updated to revision 31.
</screen>

          <para>A para trocar de volta, apenas informa a URL para o
            local no repositório a partir do qual você originalmente
            obteve sua cópia de trabalho:</para>

          <screen>
$ svn switch http://svn.red-bean.com/repos/trunk/vendors .
U  myproj/foo.txt
U  myproj/bar.txt
U  myproj/baz.c
U  myproj/qux.c
Updated to revision 31.
</screen>

          <tip>
            <para>Você pode apenas trocar parte de sua cópia de trabalho
              para um ramo se você não quiser trocar toda a sua cópia de
              trabalho.</para>
          </tip>

          <para>Algumas vezes um administrador pode mudar a
            <quote>localização base</quote> de seu repositório&mdash;em
            outras palavras, o conteúdo do repositório não muda, mas a
            URL principal que dá acesso à raiz do repositório sim.  Por
            exemplo, o nome do host pode mudar, o esquema da URL pode
            mudar, ou qualquer parte da URL relacionada ao repositório
            em si pode mudar.  Ao invés de obter (<foreignphrase>check
            out</foreignphrase>) uma nova cópia de trabalho, você pode
            fazer com que o comando <command>svn switch</command>
            <quote>reescreva</quote> os começos de todas as URLs em sua
            cópia de trabalho.  Use a opção <option>--relocate</option>
            para fazer a substituição.  Nenhum conteúdo de arquivo é
            modificado, nem sequer o repositório é contactado.  É
            semelhante a executar um script em Perl sobre os diretórios
            <filename>.svn/</filename> de sua cópia de trabalho,
            executando <command>s/OldRoot/NewRoot/</command>.</para>

          <screen>
$ svn checkout file:///tmp/repos test
A  test/a
A  test/b
&hellip;

$ mv repos newlocation
$ cd test/

$ svn update
svn: Unable to open an ra_local session to URL
svn: Unable to open repository 'file:///tmp/repos'

$ svn switch --relocate file:///tmp/repos file:///tmp/newlocation .
$ svn update
At revision 3.
</screen>

          <warning>
            <para>Tenha cuidado ao usar a opção
            <option>--relocate</option>.  Se você errar na digitação do
            argumento, você pode terminar criando URLs sem sentido
            relacionadas a sua cópia de trabalho que deixem todo o seu
            espaço de trabalho inutilizável e difícil de corrigir.
            Também é importante entender exatamente quando se deve ou
            não usar <option>--relocate</option>.  Aqui vai uma regra
            de ouro:</para>
            
            <itemizedlist>
              <listitem><para>Se sua cópia de trabalho precisar refletir
                  um novo diretório <emphasis>dentro</emphasis> do
                  repositório, então apenas use <command>svn
                  switch</command>.</para></listitem>

              <listitem><para>Se a cópia de trabalho ainda reflete o
                  mesmo diretório no repositório, mas o local do
                  repositório em si foi mudado, então use <command>svn
                  switch --relocate</command>.</para></listitem>
            </itemizedlist>
          </warning>

        </refsect1>
      </refentry>


      <refentry id="svn.ref.svn.c.unlock">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>unlock</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn unlock</refname> 
            <refpurpose>Destrava caminhos na cópia de trabalho ou URLs.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn unlock TARGET...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Destrava cada <replaceable>TARGET</replaceable>.  Se
            algum <replaceable>TARGET</replaceable> estiver ou travado
            por outro usuário ou se nenhum token de travamento válido
            existir na cópia de trabalho, exibe um aviso e continua
            destravando os demais <replaceable>TARGET</replaceable>s.
            Use <option>--force</option> para quebrar uma trava que
            pertença a outro usuário na cópia de trabalho.</para>

        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>Nenhum</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho, Repositório</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Sim</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--targets FILENAME
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
--force
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Destrava dois arquivos em sua cópia de trabalho:</para>

          <screen>

$ svn unlock tree.jpg house.jpg
'tree.jpg' unlocked.
'house.jpg' unlocked.
</screen>

          <para>Destrava um arquivo em sua cópia de trabalho que já está
            travado por outro usuário:</para>

          <screen>
$ svn unlock tree.jpg
svn: 'tree.jpg' is not locked in this working copy
$ svn unlock --force tree.jpg
'tree.jpg' unlocked.
</screen>

          <para>Destrava um arquivo sem ter uma cópia de trabalho:</para>

          <screen>
$ svn unlock http://svn.red-bean.com/repos/test/tree.jpg
'tree.jpg unlocked.
</screen>

          <para>Para mais detalhes, veja <xref
            linkend="svn.advanced.locking"/>.</para>

        </refsect1>
      </refentry>


      <refentry id="svn.ref.svn.c.update">

        <indexterm>
          <primary>svn</primary>
          <secondary>subcomando</secondary>
          <tertiary>update</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svn update</refname>
          <refpurpose>Update your working copy.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svn update [PATH...]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para><command>svn update</command> traz as alterações do
            repositório para sua cópia de trabalho.  Se nenhuma revisão
            for informada, ele atualiza sua cópia de trabalho para a
            revisão <literal>HEAD</literal>.  Do contrário, ele
            sincroniza a cópia de trabalho para a revisão dada pela
            opção <option>--revision</option>.  Como parte da
            sincronização, o <command>svn update</command> também remove
            quaisquer travas roubadas (veja <xref
            linkend="svn.tour.cleanup"/>) encontradas na cópia de
            trabalho.</para>

          <para>Para cada item atualizado, o comando exibe uma linha que
            inicia com um caractere informando a ação tomada.  Estes
            caracteres têm o seguinte significado:</para>

          <variablelist>

            <varlistentry>
              <term>A</term>
              <listitem>
                <para>Adicionado</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>D</term>
              <listitem>
                <para>Removido (deleted)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>U</term>
              <listitem>
                <para>Atualizado (updated)</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>C</term>
              <listitem>
                <para>Em conflito</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>G</term>
              <listitem>
                <para>Mesclado (merged)</para>
              </listitem>
            </varlistentry>

          </variablelist>

          <para>Um caractere na primeira coluna significa uma atualização
            no arquivo atual, que atualizou as propriedades do arquivo
            mostradas na segunda coluna.</para>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>up</para>
        </refsect1>

        <refsect1>
          <title>Altera</title>
          <para>Cópia de trabalho</para>
        </refsect1>

        <refsect1>
          <title>Acessa o Repositório</title>
          <para>Sim</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--non-recursive (-N)
--quiet (-q)
--no-ignore
--incremental
--diff3-cmd CMD
--username USER
--password PASS
--no-auth-cache
--non-interactive
--config-dir DIR
--ignore-externals
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Obtém as alterações do repositório que ocorreram desde
            a última operação de update:</para>

          <screen>
$ svn update
A  newdir/toggle.c
A  newdir/disclose.c
A  newdir/launch.c
D  newdir/README
Updated to revision 32.
</screen>

          <para>Você também pode <quote>atualizar</quote> sua cópia de
            trabalho para uma revisão mais antiga (o Subversion não tem
            o conceito de arquivos <quote>aderentes</quote>
            (<foreignphrase>sticky</foreignphrase>) que o CVS tem;
            consulte <xref linkend="svn.forcvs"/>):</para>

          <screen>
$ svn update -r30
A  newdir/README
D  newdir/toggle.c
D  newdir/disclose.c
D  newdir/launch.c
U  foo.c
Updated to revision 30.
</screen>

          <tip>
            <para>Se você quiser examinar uma revisão mais antiga de um
              único arquivo, você pode querer usar <command>svn
              cat</command> no lugar&mdash;ele não altera sua cópia de
              trabalho.</para>
          </tip>
          
        </refsect1>
      </refentry>
    </sect2>
    
  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.ref.svnadmin">
    <title><command>svnadmin</command></title>
    
    <para>O <command>svnadmin</command> é a ferramenta administrativa para
      monitoramento e manutenção de seu repositório Subversion.  Para
      informações detalhadas, veja <xref
      linkend="svn.reposadmin.maint.tk.svnadmin"/>.</para>

    <para>Como o <command>svnadmin</command> trabalha com acesso direto ao
      repositório (e assim só pode ser usado na própria máquina onde se
      encontra o repositório), ele se refere ao repositório com um caminho e
      não com uma URL.</para>
      
    <!-- =============================================================== -->
    <sect2 id="svn.ref.svnadmin.sw">
      <title>Opções do <command>svnadmin</command></title> 
      
      <variablelist>
        
        <varlistentry>
          <term><option>--bdb-log-keep</option></term>
          <listitem>
            <para>(Berkeley DB specific) Disable automatic log removal
              of database log files.  Having these log files around
              can be convenient if you need to restore from a
              catastrophic repository failure.</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--bdb-txn-nosync</option></term>
          <listitem>

            <para>(Berkeley DB specific) Disables fsync when
              committing database transactions.  Used with the
              <command>svnadmin create</command> command to create a
              Berkeley DB backed repository with
              <literal>DB_TXN_NOSYNC</literal> enabled (which improves
              speed but has some risks associated with it).</para>
          </listitem>
        </varlistentry>
        
        <varlistentry>
          <term><option>--bypass-hooks</option></term>
          <listitem>
            <para>Bypass the repository hook system.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--clean-logs</option></term>
          <listitem>
            <para>Removes unused Berkeley DB logs.</para>
          </listitem>
        </varlistentry>

        <!-- TODO config-dir? Is it really used? -->

        <varlistentry>
          <term><option>--force-uuid</option></term>
          <listitem>
            <para>By default, when loading data into repository that
              already contains revisions, <command>svnadmin</command>
              will ignore the <literal>UUID</literal> from the dump
              stream.  This option will cause the repository's
              <literal>UUID</literal> to be set to the
              <literal>UUID</literal> from the stream.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--ignore-uuid</option></term>
          <listitem>
            <para>By default, when loading an empty repository,
              <command>svnadmin</command> will ignore the
              <literal>UUID</literal> from the dump stream.  This
              option will force that UUID to be ignored (useful for
              overriding your configuration file if it has
              <option>--force-uuid</option> set).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--incremental</option></term>
          <listitem>
            <para>Dump a revision only as a diff against the
              previous revision, instead of the usual
              fulltext.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--parent-dir
          <replaceable>DIR</replaceable></option></term>
          <listitem>
            <para>When loading a dump file, root paths at
              <replaceable>DIR</replaceable> instead of
              <filename>/</filename>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--revision</option> (<option>-r</option>)
          <replaceable>ARG</replaceable></term>
          <listitem>
            <para>Specify a particular revision to operate
              on.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--quiet</option></term>
          <listitem>
            <para>Do not show normal progress&mdash;show only
              errors.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--use-post-commit-hook</option></term>
          <listitem>
            <para>When loading a dump file, run the repository's
              post-commit hook after finalizing each newly loaded
              revision.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--use-pre-commit-hook</option></term>
          <listitem>
            <para>When loading a dump file, run the repository's
              pre-commit hook before finalizing each newly loaded
              revision.  If the hook fails, abort the commit and
              terminate the load process.</para>
          </listitem>
        </varlistentry>

      </variablelist>
    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.ref.svnadmin.c">
      <title><command>svnadmin</command> Subcommands</title>
      <refentry id="svn.ref.svnadmin.c.create">

        <indexterm>
          <primary>svnadmin</primary>
          <secondary>subcomando</secondary>
          <tertiary>create</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnadmin create</refname>
          <refpurpose>Create a new, empty repository.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnadmin create REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

            <para>Create a new, empty repository at the path provided.
              If the provided directory does not exist, it will be
              created for you.<footnote><para>Remember,
              <command>svnadmin</command> works only with local
              <emphasis>paths</emphasis>, not
              <emphasis>URLs</emphasis>.</para></footnote> As of
              Subversion 1.2, <command>svnadmin</command> creates new
              repositories with the <literal>fsfs</literal> filesystem
              backend by default.</para>
          </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--bdb-txn-nosync
--bdb-log-keep
--config-dir DIR
--fs-type TYPE
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Creating a new repository is just this easy:</para>

          <screen>
$ svnadmin create /usr/local/svn/repos
</screen>
          
          <para>In Subversion 1.0, a Berkeley DB repository is always
            created.  In Subversion 1.1, a Berkeley DB repository is
            the default repository type, but an FSFS repository can be
            created using the <option>--fs-type</option>
            option:</para>

          <screen>
$ svnadmin create /usr/local/svn/repos --fs-type fsfs
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnadmin.c.deltify">

        <indexterm>
          <primary>svnadmin</primary>
          <secondary>subcomando</secondary>
          <tertiary>deltify</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnadmin deltify</refname>
          <refpurpose>Deltify changed paths in a revision range.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnadmin deltify [-r LOWER[:UPPER]] REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para><command>svnadmin deltify</command> exists in
            current versions of Subversion only for historical reasons.
            This command is deprecated and no longer needed.</para>

          <para>It dates from a time when Subversion offered
            administrators greater control over compression strategies
            in the repository.  This turned out to be a lot of
            complexity for <emphasis>very</emphasis> little gain, and
            this <quote>feature</quote> was deprecated.</para>

            </refsect1>
        <refsect1>
          <title>Opções</title>
          
          <screen>
--revision (-r) REV
--quiet (-q)
</screen>
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnadmin.c.dump">

        <indexterm>
          <primary>svnadmin</primary>
          <secondary>subcomando</secondary>
          <tertiary>dump</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnadmin dump</refname>
          <refpurpose>Dump the contents of filesystem to stdout.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnadmin dump REPOS_PATH [-r LOWER[:UPPER]] [--incremental]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Dump the contents of filesystem to stdout in a
            <quote>dumpfile</quote> portable format, sending feedback
            to stderr.  Dump revisions
            <replaceable>LOWER</replaceable> rev through
            <replaceable>UPPER</replaceable> rev.  If no revisions are
            given, dump all revision trees.  If only
            <replaceable>LOWER</replaceable> is given, dump that one
            revision tree.  See <xref linkend="svn.reposadmin.maint.migrate"/>
            for a practical use.</para>

          <para>By default, the Subversion dumpfile stream contains a
            single revision (the first revision in the requested
            revision range) in which every file and directory in the
            repository in that revision is presented as if that whole
            tree was added at once, followed by other revisions (the
            remainder of the revisions in the requested range) which
            contain only the files and directories which were modified
            in those revisions.  For a modified file, the complete
            fulltext representation of its contents, as well as all of
            its properties, are presented in the dumpfile; for a
            directory, all of its properties are presented.</para>

          <para>There are two useful options which modify the dumpfile
            generator's behavior.  The first is the
            <option>--incremental</option> option, which simply causes
            that first revision in the dumpfile stream to contain only
            the files and directories modified in that revision,
            instead of being presented as the addition of a new tree,
            and in exactly the same way that every other revision in
            the dumpfile is presented.  This is useful for generating
            a relatively small dumpfile to be loaded into another
            repository which already has the files and directories
            that exist in the original repository.</para>

          <para>The second useful option is <option>--deltas</option>.
            This option causes <command>svnadmin dump</command> to,
            instead of emitting fulltext representations of file
            contents and property lists, emit only deltas of those
            items against their previous versions.  This reduces (in
            some cases, drastically) the size of the dumpfile that
            <command>svnadmin dump</command> creates.  There are, however,
            disadvantages to using this option&mdash;deltified
            dumpfiles are more CPU intensive to create, cannot be
            operated on by <command>svndumpfilter</command>, and tend
            not to compress as well as their non-deltified counterparts
            when using third-party tools like <command>gzip</command>
            and <command>bzip2</command>.</para>
        </refsect1>
        <refsect1>
          <title>Opções</title>
          
          <screen>
--revision (-r) REV
--incremental
--quiet (-q)
--deltas
</screen>
        </refsect1>
        
        <refsect1>
          <title>Exemplos</title>

          <para>Dump your whole repository:</para>

          <screen>
$ svnadmin dump /usr/local/svn/repos
SVN-fs-dump-format-version: 1
Revision-number: 0
* Dumped revision 0.
Prop-content-length: 56
Content-length: 56
&hellip;
</screen>

          <para>Incrementally dump a single transaction from your
            repository:</para>

          <screen>
$ svnadmin dump /usr/local/svn/repos -r 21 --incremental 
* Dumped revision 21.
SVN-fs-dump-format-version: 1
Revision-number: 21
Prop-content-length: 101
Content-length: 101
&hellip;
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnadmin.c.help">

        <indexterm>
          <primary>svnadmin</primary>
          <secondary>subcomando</secondary>
          <tertiary>help</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnadmin help</refname> <refpurpose>Help!</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnadmin help [SUBCOMMAND...]</programlisting>
        </refsect1>

        <refsect1>
          <title>Descrição</title>

          <para>This subcommand is useful when you're trapped on a
            desert island with neither a net connection nor a copy of
            this book.</para>
          <!-- although marginally less useful than, say, a cooler
            full of beer. -->
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>?, h</para>
        </refsect1>

      </refentry>

      <refentry id="svn.ref.svnadmin.c.hotcopy">

        <indexterm>
          <primary>svnadmin</primary>
          <secondary>subcomando</secondary>
          <tertiary>hotcopy</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnadmin hotcopy</refname>
          <refpurpose>Make a hot copy of a repository.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnadmin hotcopy REPOS_PATH NEW_REPOS_PATH</programlisting>
        </refsect1>

        <refsect1>
          <title>Descrição</title>

          <para>This subcommand makes a full <quote>hot</quote> backup
            of your repository, including all hooks, configuration
            files, and, of course, database files.  If you pass the
            <option>--clean-logs</option> option,
            <command>svnadmin</command> will perform a hotcopy of your
            repository, and then remove unused Berkeley DB logs from
            the original repository.  You can run this command at any
            time and make a safe copy of the repository, regardless of
            whether other processes are using the repository.</para>

        </refsect1>

        <refsect1>
          <title>Opções</title>
          
          <screen>
--clean-logs
</screen>

          <warning>
            <para>As described in <xref
              linkend="svn.reposadmin.basics.backends.bdb"/>, hot-copied
              Berkeley DB repositories are <emphasis>not</emphasis>
              portable across operating systems, nor will they work on
              machines with a different <quote>endianness</quote> than
              the machine where they were created.</para>
          </warning>

          </refsect1>

      </refentry>

      <refentry id="svn.ref.svnadmin.c.list-dblogs">

        <indexterm>
          <primary>svnadmin</primary>
          <secondary>subcomando</secondary>
          <tertiary>list-dblogs</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnadmin list-dblogs</refname> <refpurpose>Ask
          Berkeley DB which log files exist for a given Subversion
          repository (applies only to repositories using the
          <literal>bdb</literal> backend).</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnadmin list-dblogs REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Berkeley DB creates logs of all changes to the
            repository, which allow it to recover in the face of
            catastrophe.  Unless you enable
            <literal>DB_LOG_AUTOREMOVE</literal>, the log files
            accumulate, although most are no longer used and can be
            deleted to reclaim disk space.  See <xref
            linkend="svn.reposadmin.maint.diskspace"/> for more
            information.</para>
        </refsect1>

      </refentry>

      <refentry id="svn.ref.svnadmin.c.list-unused-dblogs">

        <indexterm>
          <primary>svnadmin</primary>
          <secondary>subcomando</secondary>
          <tertiary>list-unused-dblogs</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnadmin list-unused-dblogs</refname>
          <refpurpose>Ask Berkeley DB which log files can be safely
          deleted (applies only to repositories using the
          <literal>bdb</literal> backend).</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnadmin list-unused-dblogs REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Berkeley DB creates logs of all changes to the
            repository, which allow it to recover in the face of
            catastrophe.  Unless you enable
            <literal>DB_LOG_AUTOREMOVE</literal>, the log files
            accumulate, although most are no longer used and can be
            deleted to reclaim disk space.  See <xref
            linkend="svn.reposadmin.maint.diskspace"/> for more
            information.</para>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>
          
          <para>Remove all unused log files from a repository:</para>

        <screen>
$ svnadmin list-unused-dblogs /path/to/repos
/path/to/repos/log.0000000031
/path/to/repos/log.0000000032
/path/to/repos/log.0000000033

$ svnadmin list-unused-dblogs /path/to/repos | xargs rm
## disk space reclaimed!
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnadmin.c.load">

        <indexterm>
          <primary>svnadmin</primary>
          <secondary>subcomando</secondary>
          <tertiary>load</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnadmin load</refname> <refpurpose>Read a
            <quote>dumpfile</quote>-formatted stream from
            stdin.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnadmin load REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Read a <quote>dumpfile</quote>-formatted stream from
            stdin, committing new revisions into the repository's
            filesystem.  Send progress feedback to stdout.</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>
          
          <screen>
--quiet (-q)
--ignore-uuid
--force-uuid
--use-pre-commit-hook
--use-post-commit-hook
--parent-dir
</screen>
        </refsect1>

        <refsect1>
          <title>Example</title>

          <para>This shows the beginning of loading a repository from
            a backup file (made, of course, with <command>svnadmin
            dump</command>):</para>

          <screen>
$ svnadmin load /usr/local/svn/restored &lt; repos-backup
&lt;&lt;&lt; Started new txn, based on original revision 1
     * adding path : test ... done.
     * adding path : test/a ... done.
&hellip;
</screen>

          <para>Or if you want to load into a subdirectory:</para>

          <screen>
$ svnadmin load --parent-dir new/subdir/for/project /usr/local/svn/restored &lt; repos-backup
&lt;&lt;&lt; Started new txn, based on original revision 1
     * adding path : test ... done.
     * adding path : test/a ... done.
&hellip;
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnadmin.c.lslocks">

        <indexterm>
          <primary>svnadmin</primary>
          <secondary>subcomando</secondary>
          <tertiary>lslocks</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnadmin lslocks</refname> 
          <refpurpose>Print descriptions of all locks.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnadmin lslocks REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Print descriptions of all locks in a repository.</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>
          
          <para>Nenhum</para>
        </refsect1>

        <refsect1>
          <title>Example</title>


          <para>This lists the one locked file in the repository at
            <filename>/svn/repos</filename>:</para>

          <screen>
$ svnadmin lslocks /svn/repos
Path: /tree.jpg
UUID Token: opaquelocktoken:ab00ddf0-6afb-0310-9cd0-dda813329753
Owner: harry
Created: 2005-07-08 17:27:36 -0500 (Fri, 08 Jul 2005)
Expires: 
Comment (1 line):
Rework the uppermost branches on the bald cypress in the foreground.
</screen>
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnadmin.c.lstxns">

        <indexterm>
          <primary>svnadmin</primary>
          <secondary>subcomando</secondary>
          <tertiary>lstxns</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnadmin lstxns</refname>
          <refpurpose>Print the names of all uncommitted transactions.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnadmin lstxns REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Print the names of all uncommitted transactions.  See
            <xref linkend="svn.reposadmin.maint.diskspace.deadtxns" />
            for information on how uncommitted transactions are
            created and what you should do with them.</para>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>List all outstanding transactions in a
            repository.</para>

          <screen>
$ svnadmin lstxns /usr/local/svn/repos/ 
1w
1x
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnadmin.c.recover">

        <indexterm>
          <primary>svnadmin</primary>
          <secondary>subcomando</secondary>
          <tertiary>recover</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnadmin recover</refname>

          <refpurpose>Bring a repository database back into a
          consistent state (applies only to repositories using the
          <literal>bdb</literal> backend).  In addition, if
          <filename>repos/conf/passwd</filename> does not exist, it
          will create a default password file .</refpurpose>

        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnadmin recover REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Run this command if you get an error indicating that
            your repository needs to be recovered.</para>
        </refsect1>
        <refsect1>
          <title>Opções</title>
          <screen>
--wait
</screen>
        </refsect1>
        <refsect1>
          <title>Exemplos</title>
          
          <para>Recover a hung repository:</para>

          <screen>
$ svnadmin recover /usr/local/svn/repos/ 
Repository lock acquired.
Please wait; recovering the repository may take some time...

Recovery completed.
The latest repos revision is 34.
</screen>

          <para>Recovering the database requires an exclusive lock on
            the repository. (This is a <quote>database lock</quote>;
            see <xref linkend="svn.advanced.locking.meanings"/>.)
            If another process is accessing the repository,
            then <command>svnadmin recover</command> will error:</para>
          <screen>
$ svnadmin recover /usr/local/svn/repos
svn: Failed to get exclusive repository access; perhaps another process
such as httpd, svnserve or svn has it open?

$
</screen>

          <para>The <option>--wait</option> option, however, will
            cause <command>svnadmin recover</command> to wait
            indefinitely for other processes to disconnect:</para>

          <screen>
$ svnadmin recover /usr/local/svn/repos --wait
Waiting on repository lock; perhaps another process has it open?

### time goes by&hellip;

Repository lock acquired.
Please wait; recovering the repository may take some time...

Recovery completed.
The latest repos revision is 34.
</screen>

        </refsect1>
      </refentry>


      <refentry id="svn.ref.svnadmin.c.rmlocks">

        <indexterm>
          <primary>svnadmin</primary>
          <secondary>subcomando</secondary>
          <tertiary>rmlocks</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnadmin rmlocks</refname>
          <refpurpose>Unconditionally remove one or more locks from a
          repository.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnadmin rmlocks REPOS_PATH LOCKED_PATH...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Remove lock from each <replaceable>LOCKED_PATH</replaceable>.</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>
          
          <para>Nenhum</para>
        </refsect1>

        <refsect1>
          <title>Example</title>

          <para>This deletes the locks on
            <filename>tree.jpg</filename> and
            <filename>house.jpg</filename> in the repository at
            <filename>/svn/repos</filename></para>

          <screen>
$ svnadmin rmlocks /svn/repos tree.jpg house.jpg
Removed lock on '/tree.jpg.
Removed lock on '/house.jpg.
</screen>
        </refsect1>
      </refentry>


      <refentry id="svn.ref.svnadmin.c.rmtxns">

        <indexterm>
          <primary>svnadmin</primary>
          <secondary>subcomando</secondary>
          <tertiary>rmtxns</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnadmin rmtxns</refname>
          <refpurpose>Delete transactions from a repository.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnadmin rmtxns REPOS_PATH TXN_NAME...</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Delete outstanding transactions from a repository.
            This is covered in detail in <xref
            linkend="svn.reposadmin.maint.diskspace.deadtxns" />.</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>
          
          <screen>
--quiet (-q)
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Remove named transactions:</para>

          <screen>
$ svnadmin rmtxns /usr/local/svn/repos/ 1w 1x
</screen>

          <para>Fortunately, the output of <command>lstxns</command>
            works great as the input for <command>rmtxns</command>:</para>

          <screen>
$ svnadmin rmtxns /usr/local/svn/repos/  `svnadmin lstxns /usr/local/svn/repos/`
</screen>

          <para>Which will remove all uncommitted transactions from
            your repository.</para>

        </refsect1>
      </refentry>


      <refentry id="svn.ref.svnadmin.c.setlog">

        <indexterm>
          <primary>svnadmin</primary>
          <secondary>subcomando</secondary>
          <tertiary>setlog</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnadmin setlog</refname>
          <refpurpose>Set the log-message on a revision.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnadmin setlog REPOS_PATH -r REVISION FILE</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Set the log-message on revision REVISION to the
            contents of FILE.</para>

          <para>This is similar to using <command>svn propset
            --revprop</command> to set the <literal>svn:log</literal> property
            on a revision, except that you can also use the option
            <option>--bypass-hooks</option> to avoid running any pre- or
            post-commit hooks, which is useful if the modification of
            revision properties has not been enabled in the pre-revprop-change
            hook.</para>

          <warning>
            <para>Revision properties are not under version control,
              so this command will permanently overwrite the previous
              log message.</para>
          </warning>

        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--bypass-hooks
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Set the log message for revision 19 to the contents of
            the file <filename>msg</filename>:</para>

          <screen>
$ svnadmin setlog /usr/local/svn/repos/ -r 19 msg
</screen>

        </refsect1>
      </refentry>

      <!-- this could use a lot more explanation.  When should I use
      it?  What do I do if it fails? -->
      <refentry id="svn.ref.svnadmin.c.verify">

        <indexterm>
          <primary>svnadmin</primary>
          <secondary>subcomando</secondary>
          <tertiary>verify</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnadmin verify</refname>
          <refpurpose>Verify the data stored in the repository.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnadmin verify REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Run this command if you wish to verify the integrity
            of your repository.  This basically iterates through all
            revisions in the repository by internally dumping all
            revisions and discarding the output&mdash;it's a good idea
            to run this on a regular basis to guard against latent
            hard disk failures and <quote>bitrot</quote>.  If this
            command fails&mdash;which it will do at the first sign of
            a problem&mdash;that means that your repository has at
            least one corrupted revision and you should restore the
            corrupted revision from a backup (you did make a backup,
            didn't you?).</para>

        </refsect1>

        <refsect1>
          <title>Exemplos</title>
          
          <para>Verify a hung repository:</para>

          <screen>
$ svnadmin verify /usr/local/svn/repos/ 
* Verified revision 1729.
</screen>

        </refsect1>
      </refentry>

    </sect2>

  </sect1>
  
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.ref.svnlook">
    <title><command>svnlook</command></title>
    
    <para><command>svnlook</command> é um comando de console útil
      para examinar diferentes aspectos do repositório Subversion.
      Ele não faz nenhuma mudança no repositório&mdash;é usado mesmo 
      para dar uma dar uma <quote>espiada</quote>.
      <command>svnlook</command> é usando tipicamente usado pelos
      hooks do repositório, mas o administrador do repositório pode
      achá-lo útil como ferramente de diagnóstico.</para>

    <para>Já que <command>svnlook</command> funciona via acesso direto
      ao repositório, (e por isso só pode ser usado em máquinas que
      tenham repositórios), ele se refere ao repositório por um caminho, 
      não uma URL.</para>

    <para>Se nenhuma revisão ou transação for especificada, o padrão do
      <command>svnlook</command> é da revisão mais jovem(mais recente)
      do repositório.</para>
    
    <!-- =============================================================== -->
    <sect2 id="svn.ref.svnlook.sw">
      <title>Opções do <command>svnlook</command></title>
      
      <para>Opções no <command>svnlook</command> são globais, assim como
        no <command>svn</command> e <command>svnadmin</command>;
        entretanto, a maioria das opções apenas se aplicam a um commando
        já que as funcionalidades do <command>svnlook</command> é 
        (intencionalmente) limitado ao escopo.</para>

      <variablelist>

        <varlistentry>
          <term><option>--no-diff-deleted</option></term>
          <listitem>
	      <para>Previne o <command>svnlook</command> de mostrar as
	        diferenças entre arquivos deletados.  O comportamento padrão
	        quando um arquivo é deletado numa transação/revisão é
	        mostrar as mesmas diferenças que você veria se tivesse
	        deixado o arquivo mas apagado seu conteudo.</para> 
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--revision</option>
            (<option>-r</option>)</term>
          <listitem>
	      <para>Especifica uma revisão em particular que você deseja
		    examinar.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--revprop</option></term>
          <listitem>
	      <para>Opera uma propriedade da revisão ao invés da propriedade
		    especificada para o arquivo ou diretório. Essa opção exige
		    que você passe a revisão com a opção
		    <option>--revision</option> (<option>-r</option>).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--transaction</option>
            (<option>-t</option>)</term>
          <listitem>
	      <para>Especifica um ID de transação particular que você deseja
	        examinar.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--show-ids</option></term>
          <listitem>
	      <para>Mostrar o ID da revisão do nodo do sistema de arquivos
	        para cada caminho da árvore do sistema de arquivos.</para>
          </listitem>
        </varlistentry>

      </variablelist>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.ref.svnlook.c">
      <title>Sub-comandos do <command>svnlook</command> </title>

      <refentry id="svn.ref.svnlook.c.author">

        <indexterm>
          <primary>svnlook</primary>
          <secondary>subcomandos</secondary>
          <tertiary>author</tertiary>
        </indexterm>

        <refnamediv>
          <refname>autor svnlook </refname>
          <refpurpose>Mostrar o autor.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnlook author REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Mostrar o autor da revisão ou transação no repositório.</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>
          
          <screen>
--revision (-r) REV
--transaction (-t)
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

        <para><command>svnlook author</command> é útil, mas não muito
          excitante:</para>

          <screen>
$ svnlook author -r 40 /usr/local/svn/repos 
sally
</screen>            

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnlook.c.cat">

        <indexterm>
          <primary>svnlook</primary>
          <secondary>subcomandos</secondary>
          <tertiary>cat</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnlook cat</refname>
          <refpurpose>Mostra o conteudo de um arquivo.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnlook cat REPOS_PATH PATH_IN_REPOS</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Mostra o conteudo de um arquivo.</para>

          </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--transaction (-t)
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Isto motra o conteudo de um arquivo em uma transação
            <literal>ax8</literal>, localizado no
            <filename>/trunk/README</filename>:</para>

          <screen>
$ svnlook cat -t ax8 /usr/local/svn/repos /trunk/README

               Subversion, a version control system.
               =====================================

$LastChangedDate: 2003-07-17 10:45:25 -0500 (Thu, 17 Jul 2003) $

Contents:

     I. A FEW POINTERS
    II. DOCUMENTATION
   III. PARTICIPATING IN THE SUBVERSION COMMUNITY
&hellip;
</screen>
          
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnlook.c.changed">

        <indexterm>
          <primary>svnlook</primary>
          <secondary>subcomando</secondary>
          <tertiary>changed</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnlook changed</refname>
          <refpurpose>Mostra os caminhos que foram mudados.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnlook changed REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Mostra os caminhos que foram mudados em uma revisão ou
            transação particular, assim como <quote>svn
            update-style</quote> as letras de estatus nas duas primeiras
            colunas:</para>

          <variablelist>
            
            <varlistentry>
              <term>'<literal>A </literal>'</term>
              <listitem>
                <para>Item adicionado ao repositório.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'<literal>D </literal>'</term>
              <listitem>
                <para>Item apagado do respostório.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'<literal>U </literal>'</term>
              <listitem>
                <para>Conteúdo do arquivo foi mudado.</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'<literal> U</literal>'</term>
              <listitem>
                <para>Propriedades do tem mudados.--FIXME Note the leading space.--</para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term>'<literal>UU</literal>'</term>
              <listitem>
                <para>Conteudo e propriedades mudados.</para>
              </listitem>
            </varlistentry>

          </variablelist>

	  <para>Arquivos e diretórios podem ser distinguidos, como os
	    caminhos dos diretórios são mostrados com caracter
	    '<literal>/</literal>'.</para>

        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--transaction (-t)
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Isto mostra a lista de todos os diretórios e arquivos
            mudados na revisão 39 em um diretório de teste.  Note
            que a primeira mudança é um diretório, como evidenciado pela
            <literal>/</literal>:</para>

          <screen>
$ svnlook changed -r 39 /usr/local/svn/repos
A   trunk/vendors/deli/
A   trunk/vendors/deli/chips.txt
A   trunk/vendors/deli/sandwich.txt
A   trunk/vendors/deli/pickle.txt
U   trunk/vendors/baker/bagel.txt
 U  trunk/vendors/baker/croissant.txt
UU  trunk/vendors/baker/pretzel.txt
D   trunk/vendors/baker/baguette.txt
</screen>
          
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnlook.c.date">

        <indexterm>
          <primary>svnlook</primary>
          <secondary>subcomando</secondary>
          <tertiary>date</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnlook date</refname>
          <refpurpose>Mostrar data-hora.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnlook date REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Mostrar data-hora de uma revisão ou transação em um
            repositório.</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--transaction (-t)
</screen>
        </refsect1>
        
        <refsect1>
          <title>Exemplos</title>
          
          <para>Mostra a data da revisão 40 de um repositório
            de teste:</para>

          <screen>
$ svnlook date -r 40 /tmp/repos/
2003-02-22 17:44:49 -0600 (Sat, 22 Feb 2003)
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnlook.c.diff">

        <indexterm>
          <primary>svnlook</primary>
          <secondary>subcomando</secondary>
          <tertiary>diff</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnlook diff</refname>
	  <refpurpose>Mostra diferenças de arquivos e 
	      propriedades que foram mudados.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnlook diff REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

	  <para>Mostra no estilo GNU diferençasde arquivos e 
	      propriedades que foram mudados.</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>
          
          <screen>
--revision (-r) REV
--transaction (-t)
--no-diff-added
--no-diff-deleted
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>
          
          <para>Isto mostra um novo arquivo adicionado, deletado e copiado:</para>

          <screen>
$ svnlook diff -r 40 /usr/local/svn/repos/
Copied: egg.txt (from rev 39, trunk/vendors/deli/pickle.txt)

Added: trunk/vendors/deli/soda.txt
==============================================================================

Modified: trunk/vendors/deli/sandwich.txt
==============================================================================
--- trunk/vendors/deli/sandwich.txt	(original)
+++ trunk/vendors/deli/sandwich.txt	2003-02-22 17:45:04.000000000 -0600
@@ -0,0 +1 @@
+Don't forget the mayo!

Modified: trunk/vendors/deli/logo.jpg
==============================================================================
(Binary files differ)

Deleted: trunk/vendors/deli/chips.txt
==============================================================================

Deleted: trunk/vendors/deli/pickle.txt
==============================================================================
</screen>
          
          <para>Se um arquivo tem um conteudo que não é texto, 
            propriedade <literal>svn:mime-type</literal>, então as 
            diferenças não são explicitamente mostradas.</para>
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnlook.c.dirs-changed">

        <indexterm>
          <primary>svnlook</primary>
          <secondary>subcomando</secondary>
          <tertiary>dirs-changed</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnlook dirs-changed</refname>
          <refpurpose>Mostra os diretórios que foram mudados.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnlook dirs-changed REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Mostra os diretórios que foram mudados (edição de propriedade) 
             ou tiveram seus filhos mudados.</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--transaction (-t)
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Isto mostra os difertórios que foram mudados na 
            revisão 40 no nosso respostório de exemplo:</para>

          <screen>
$ svnlook dirs-changed -r 40 /usr/local/svn/repos
trunk/vendors/deli/
</screen>
          
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnlook.c.help">

        <indexterm>
          <primary>svnlook</primary>
          <secondary>subcomando</secondary>
          <tertiary>help</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnlook help</refname> <refpurpose>Help!</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopses</title>
          <programlisting>Também svnlook -h e svnlook -?.</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Mostra a mensagem de ajuda para o svnlook.  Este
            comando, como seu irmão <command>svn help</command>, é 
            também seu amigo, mesmo que você não ligue mais pra ele
            e tenha esquecido de convida-lo para sua última festa.</para>
        </refsect1>

        <refsect1>
          <title>Nomes alternativos</title>
          <para>?, h</para>
        </refsect1>

      </refentry>

      <refentry id="svn.ref.svnlook.c.history">

        <indexterm>
          <primary>svnlook</primary>
          <secondary>subcomando</secondary>
          <tertiary>history</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnlook history</refname>
          <refpurpose>Mostra informções sobre o histórico de um caminhos
            em um repositório (ou da raiz do diretório se nenhum caminho
            for informado).</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnlook history REPOS_PATH [PATH_IN_REPOS]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Mostra informações sobre histórico de um caminho 
            em um repositório (ou da raiz do diretório se nenhum caminho
            for informado).</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--show-ids
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Isto mostra o histórico de um caminho 
            <filename>/tags/1.0</filename>  da revisão 20 no nosso
            repositório de exemplo.</para>

          <screen>
$ svnlook history -r 20 /usr/local/svn/repos /tags/1.0 --show-ids
REVISION   PATH &lt;ID&gt;
--------   ---------
      19   /tags/1.0 &lt;1.2.12&gt;
      17   /branches/1.0-rc2 &lt;1.1.10&gt;
      16   /branches/1.0-rc2 &lt;1.1.x&gt;
      14   /trunk &lt;1.0.q&gt;
      13   /trunk &lt;1.0.o&gt;
      11   /trunk &lt;1.0.k&gt;
       9   /trunk &lt;1.0.g&gt;
       8   /trunk &lt;1.0.e&gt;
       7   /trunk &lt;1.0.b&gt;
       6   /trunk &lt;1.0.9&gt;
       5   /trunk &lt;1.0.7&gt;
       4   /trunk &lt;1.0.6&gt;
       2   /trunk &lt;1.0.3&gt;
       1   /trunk &lt;1.0.2&gt;
</screen>
          
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnlook.c.info">

        <indexterm>
          <primary>svnlook</primary>
          <secondary>subcomando</secondary>
          <tertiary>info</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnlook info</refname>
          <refpurpose>Mostra o autor, data-hora, tamanho da mensagem de log, 
            e a mensagem de log.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnlook info REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Mostra o autor, data-hora, tamanho da mensagem de log, 
            e a mensagem de log.</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--transaction (-t)
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Isto mostra a saída para a revisão 40 no nosso
            repositório de exemplo.</para>

          <screen>
$ svnlook info -r 40 /usr/local/svn/repos
sally
2003-02-22 17:44:49 -0600 (Sat, 22 Feb 2003)
15
Rearrange lunch.
</screen>
          
        </refsect1>
      </refentry>


      <refentry id="svn.ref.svnlook.c.lock">

        <indexterm>
          <primary>svnlook</primary>
          <secondary>subcomando</secondary>
          <tertiary>lock</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnlook lock</refname>
          <refpurpose>Se o lock existir no caminho do repositório,
            o descreve.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnlook lock REPOS_PATH PATH_IN_REPOS</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Mostra todas as informações disponíveis para o lock no
              <replaceable>PATH_IN_REPOS</replaceable>.  Se
              <replaceable>PATH_IN_REPOS</replaceable> não estiver lockado,
              não mostra nada.</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>
            
          <para>Nada</para>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Descreve o lock do arquivo
            <filename>tree.jpg</filename>.</para>

          <screen>
$ svnlook lock /svn/repos tree.jpg
UUID Token: opaquelocktoken:ab00ddf0-6afb-0310-9cd0-dda813329753
Owner: harry
Created: 2005-07-08 17:27:36 -0500 (Fri, 08 Jul 2005)
Expires: 
Comment (1 line):
Rework the uppermost branches on the bald cypress in the foreground.
</screen>
          
        </refsect1>
      </refentry>


      <refentry id="svn.ref.svnlook.c.log">

        <indexterm>
          <primary>svnlook</primary>
          <secondary>subcomando</secondary>
          <tertiary>log</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnlook log</refname>
          <refpurpose>Mostra a mensagem de log.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnlook log REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Mostra a mensagem de log.</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>
          
          <screen>
--revision (-r) REV
--transaction (-t)
</screen>
        </refsect1>
        
        <refsect1>
          <title>Exemplos</title>
          
          <para>Isto mostra o log de saída para a revisão 40 no nosso
           repositório de exemplo:</para>

          <screen>
$ svnlook log /tmp/repos/
Rearrange lunch.
</screen>
          
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnlook.c.propget">

        <indexterm>
          <primary>svnlook</primary>
          <secondary>subcomando</secondary>
          <tertiary>propget</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnlook propget</refname>
          <refpurpose>Print the raw value of a property on a path in
            the repository.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnlook propget REPOS_PATH PROPNAME [PATH_IN_REPOS]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>List the value of a property on a path in the
            repository.</para>

          </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>pg, pget</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--transaction (-t)
--revprop
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>This shows the value of the <quote>seasonings</quote> property
            on the file <filename>/trunk/sandwich</filename> in the
            <literal>HEAD</literal> revision:</para>

          <screen>
$ svnlook pg /usr/local/svn/repos seasonings /trunk/sandwich
mustard
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnlook.c.proplist">

        <indexterm>
          <primary>svnlook</primary>
          <secondary>subcomando</secondary>
          <tertiary>proplist</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnlook proplist</refname>
          <refpurpose>Print the names and values of versioned file and
            directory properties.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnlook proplist REPOS_PATH [PATH_IN_REPOS]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>List the properties of a path in the repository.  With
            <option>--verbose</option>, show the property values too.</para>

          </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>pl, plist</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--transaction (-t)
--verbose (-v)
--revprop
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>This shows the names of properties set on the file
            <filename>/trunk/README</filename> in the
            <literal>HEAD</literal> revision:</para>

          <screen>
$ svnlook proplist /usr/local/svn/repos /trunk/README
  original-author
  svn:mime-type
</screen>

          <para>This is the same command as in the previous example,
            but this time showing the property values as well:</para>

          <screen>
$ svnlook --verbose proplist /usr/local/svn/repos /trunk/README
  original-author : fitz
  svn:mime-type : text/plain
</screen>
          
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnlook.c.tree">
        <indexterm>
          <primary>svnlook</primary>
          <secondary>subcomando</secondary>
          <tertiary>tree</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnlook tree</refname>
          <refpurpose>Print the tree.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnlook tree REPOS_PATH [PATH_IN_REPOS]</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>
          <para>Print the tree, starting at
            <replaceable>PATH_IN_REPOS</replaceable> (if supplied, at
            the root of the tree otherwise), optionally showing node
            revision IDs.</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--revision (-r) REV
--transaction (-t)
--show-ids
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>
          
          <para>This shows the tree output (with node-IDs) for revision
            40 in our sample repository:</para>

          <screen>
$ svnlook tree -r 40 /usr/local/svn/repos --show-ids
/ &lt;0.0.2j&gt;
 trunk/ &lt;p.0.2j&gt;
  vendors/ &lt;q.0.2j&gt;
   deli/ &lt;1g.0.2j&gt;
    egg.txt &lt;1i.e.2j&gt;
    soda.txt &lt;1k.0.2j&gt;
    sandwich.txt &lt;1j.0.2j&gt;
</screen>
          
        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnlook.c.uuid">

        <indexterm>
          <primary>svnlook</primary>
          <secondary>subcomando</secondary>
          <tertiary>uuid</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnlook uuid</refname>
          <refpurpose>Print the repository's
          <literal>UUID</literal>.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnlook uuid REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Print the <literal>UUID</literal> for the repository.
            the UUID is the repository's
            <emphasis>u</emphasis>niversal <emphasis>u</emphasis>nique
            <emphasis>id</emphasis>entifier.  The Subversion client
            uses this identifier to differentiate between one
            repository and another.</para>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <screen>
$ svnlook uuid /usr/local/svn/repos
e7fe1b91-8cd5-0310-98dd-2f12e793c5e8
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnlook.c.youngest">

        <indexterm>
          <primary>svnlook</primary>
          <secondary>subcomando</secondary>
          <tertiary>youngest</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnlook youngest</refname>
          <refpurpose>Print the youngest revision number.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnlook youngest REPOS_PATH</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Print the youngest revision number of a repository.</para>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

        <para>This shows the youngest revision of our sample
          repository:</para>

          <screen>
$ svnlook youngest /tmp/repos/ 
42
</screen>

        </refsect1>
      </refentry>

    </sect2>
  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.ref.svnsync">

    <title><command>svnsync</command></title>
    
    <para><command>svnsync</command> is the Subversion remote
      repository mirroring tool.  Put simply, it allows you to replay
      the revisions of one repository into another one.</para>

    <para>In any mirroring scenario, there are two repositories: the
      source repository, and the mirror (or <quote>sink</quote>)
      repository.  The source repository is the repository from which
      <command>svnsync</command> pulls revisions.  The mirror
      repository is the destination for the revisions pulled from the
      source repository.  Each of the repositories may be local or
      remote&mdash;they are only ever addressed by their URLs.</para>

    <para>The <command>svnsync</command> process requires only read
      access to the source repository; it never attempts to modify it.
      But obviously, <command>svnsync</command> requires both read and
      write access to the mirror repository.</para>

    <warning>
      <para><command>svnsync</command> is very sensitive to changes
        made in the mirror repository that weren't made as part of a
        mirroring operation.  To prevent this from happening, it's
        best if the <command>svnsync</command> process is the only
        process permitted to modify the mirror repository.</para>
    </warning>

    <!-- =============================================================== -->
    <sect2 id="svn.ref.svnsync.sw">
      <title><command>svnsync</command> Options</title>

      <variablelist>

        <varlistentry>
          <term><option>--config-dir</option>
            <replaceable>DIR</replaceable></term>
          <listitem>
            <para>Instructs Subversion to read configuration
              information from the specified directory instead of the
              default location (<filename>.subversion</filename> in
              the user's home directory).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--no-auth-cache</option></term>
          <listitem>
            <para>Prevents caching of authentication information
              (e.g. username and password) in the Subversion
              administrative directories.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--non-interactive</option></term>
          <listitem>
            <para>In the case of an authentication failure, or
              insufficient credentials, prevents prompting for
              credentials (e.g. username or password).  This is useful
              if you're running Subversion inside of an automated
              script and it's more appropriate to have Subversion fail
              than to prompt for more information.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--password</option>
            <replaceable>PASS</replaceable></term>
          <listitem>
            <para>Indicates that you are providing your password for
              authentication on the command line&mdash;otherwise, if
              it is needed, Subversion will prompt you for
              it.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--username</option>
            <replaceable>NAME</replaceable></term>
          <listitem>
            <para>Indicates that you are providing your username for
              authentication on the command line&mdash;otherwise, if
              it is needed, Subversion will prompt you for
              it.</para>
          </listitem>
        </varlistentry>

      </variablelist>

    </sect2>

    <!-- =============================================================== -->
    <sect2 id="svn.ref.svnsync.c">
      <title><command>svnsync</command> Subcommands</title>

      <para>Here are the various subcommands:</para>

      <refentry id="svn.ref.svnsync.c.copy-revprops">

        <indexterm>
          <primary>svnsync</primary>
          <secondary>subcomando</secondary>
          <tertiary>copy-revprops</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnsync copy-revprops</refname>
          <refpurpose>Copy all revision properties for a given
            revision from the source repository to the mirror
            repository.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnsync copy-revprops DEST_URL REV</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>Because Subversion revision properties can be changed
            at any time, it's possible that the properties for some
            revision might be changed after that revision has already
            been synchronized to another repository.  Because the
            <command>svnsync synchronize</command> command operates
            only on the range of revisions that have not yet been
            synchronized, it won't notice a revision property change
            outside that range.  Left as is, this causes a deviation
            in the values of that revision's properties between the
            source and mirror repositories.  <command>svnsync
            copy-revprops</command> is the answer to this problem.
            Use it to re-synchronize the revision properties for a
            particular revision.</para>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>Nenhum</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--non-interactive
--no-auth-cache
--username NAME
--password PASS
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Re-synchronize revision properties for a single revision:</para>

          <screen>
$ svnsync copy-revprops file:///opt/svn/repos-mirror 6
Copied properties for revision 6.
$
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnsync.c.init">

        <indexterm>
          <primary>svnsync</primary>
          <secondary>subcomando</secondary>
          <tertiary>initialize</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnsync initialize</refname>
          <refpurpose>Initialize a destination repository for
            synchronization from another repository.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnsync initialize DEST_URL SOURCE_URL</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para><command>svnsync initialize</command> verifies that a
            repository meets the requirements of a new mirror
            repository&mdash;that it has no previous existing version
            history, and that it allows revision property
            modifications&mdash;and records the initial administrative
            information which associates the mirror repository with
            the source repository.  This is the first
            <command>svnsync</command> operation you run on a would-be
            mirror repository.</para>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>init</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--non-interactive
--no-auth-cache
--username NAME
--password PASS
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Fail to initialize a mirror repository due to
            inability to modify revision properties:</para>

          <screen>
$ svnsync initialize file:///opt/svn/repos-mirror http://svn.example.com/repos
svnsync: Repository has not been enabled to accept revision propchanges;
ask the administrator to create a pre-revprop-change hook
$
</screen>

          <para>Initialize a repository as a mirror, having already
            created a pre-revprop-change hook which permits all revision
            property changes:</para>

          <screen>
$ svnsync initialize file:///opt/svn/repos-mirror http://svn.example.com/repos
Copied properties for revision 0.
$
</screen>

        </refsect1>
      </refentry>

      <refentry id="svn.ref.svnsync.c.sync">

        <indexterm>
          <primary>svnsync</primary>
          <secondary>subcomando</secondary>
          <tertiary>synchronize</tertiary>
        </indexterm>

        <refnamediv>
          <refname>svnsync synchronize</refname>
          <refpurpose>Transfer all pending revisions from the source
            repository to the mirror repository.</refpurpose>
        </refnamediv>
        <refsect1>
          <title>Sinopse</title>
          <programlisting>svnsync synchronize DEST_URL</programlisting>
        </refsect1>
        <refsect1>
          <title>Descrição</title>

          <para>The <command>svnsync synchronize</command> command
            does all the heavy lifting of a repository mirroring
            operation.  After consulting with the mirror repository to
            see which revisions have already been copied into it, it
            then begins copying any not-yet-mirrored revisions from
            the source repository.</para>

          <para><command>svnsync synchronize</command> can be
            gracefully cancelled and restarted.</para>
        </refsect1>

        <refsect1>
          <title>Nomes Alternativos</title>
          <para>sync</para>
        </refsect1>

        <refsect1>
          <title>Opções</title>

          <screen>
--non-interactive
--no-auth-cache
--username NAME
--password PASS
--config-dir DIR
</screen>
        </refsect1>

        <refsect1>
          <title>Exemplos</title>

          <para>Copy unsynchronized revisions from the source
            repository to the mirror repository:</para>

          <screen>
$ svnsync synchronize file:///opt/svn/repos-mirror
Committed revision 1.
Copied properties for revision 1.
Committed revision 2.
Copied properties for revision 2.
Committed revision 3.
Copied properties for revision 3.
&hellip;
Committed revision 45.
Copied properties for revision 45.
Committed revision 46.
Copied properties for revision 46.
Committed revision 47.
Copied properties for revision 47.
$
</screen>

        </refsect1>

      </refentry>
    </sect2>

  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.ref.svnserve">

    <title><command>svnserve</command></title>
    
    <para>O <command>svnserve</command> possibilita o acesso a
      repositórios do Subversion usando o protocolo de rede específico
      do Subversion.</para>

    <para>Você pode executar o <command>svnserve</command> como um
      processo servidor independente (para clientes que estejam usando o
      método de acesso <literal>svn://</literal>); você pode deixar com
      que um daemon tal como o <command>inetd</command> ou
      <command>xinetd</command> execute-o para você sob demanda (também
      para acesso via <literal>svn://</literal>), ou você pode fazer com
      que o <command>sshd</command> execute-o sob demanda para o método
      de acesso <literal>svn+ssh://</literal>.</para>

    <para>Independentemente do método de acesso, uma vez que o cliente
      tenha selecionado um repositório enviando sua URL, o 
      <command>svnserve</command> lê um arquivo chamado 
      <filename>conf/svnserve.conf</filename> no diretório do
      repositório para determinar configurações específicas tais como
      qual base de dados de autenticação usar e que políticas de
      autorização aplicar.  Veja <xref
      linkend="svn.serverconfig.svnserve"/> para mais detalhes sobre o
      arquivo <filename>svnserve.conf</filename>.</para>
    
    <!-- =============================================================== -->
    <sect2 id="svn.ref.svnserve.sw">
      <title>Opções do <command>svnserve</command></title>
      
      <para>Diferente dos comandos anteriores que descrevemos, o
        <command>svnserve</command> não possui subcomandos&mdash;o
        <command>svnserve</command> é controlado exclusivamente por
        opções.</para>

      <variablelist>

        <varlistentry>
          <term><option>--daemon</option> (<option>-d</option>)</term>
          <listitem>
            <para>Faz com que o <command>svnserve</command> execute em
              modo daemon.  O próprio <command>svnserve</command> se pôe
              em segundo plano, aceitando e servindo conexões TCP/IP na
              porta do svn (3690, por padrão).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--listen-port</option>=<replaceable>PORT</replaceable></term>
          <listitem>
              <para>Faz com que o <command>svnserve</command> escute na
                porta <replaceable>PORT</replaceable> quando executado em
                modo daemon.  (Por padrão, daemons FreeBSD só escutam em
                tcp6&mdash;esta opção também faz com que escutem em
                tcp4.)</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--listen-host</option>=<replaceable>HOST</replaceable></term>
          <listitem>
            <para>Faz com que o <command>svnserve</command> escute na
              interface especificada por
              <replaceable>HOST</replaceable>, que pode ser tanto um
              nome de host ou um endereço de IP.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--foreground</option></term>
          <listitem>
            <para>Quando usado junto com <option>-d</option>, esta opção
              faz com que o <command>svnserve</command> permaneça em
              primeiro plano.  Esta opção é especialmente útil para
              depuração.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--inetd</option> (<option>-i</option>)</term>
          <listitem>
            <para>Faz com que o <command>svnserve</command> use os
              descritores de arquivo stdin/stdout, como apropriado para
              um daemon que esteja executando via
              <command>inetd</command>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--help</option> (<option>-h</option>)</term>
          <listitem>
            <para>Exibe um resumo de utilização do comando e encerra.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--version</option></term>
          <listitem>
            <para>Exibe informação de versão, uma lista de módulos
              disponíveis para repositório e encerra.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--root</option>=<replaceable>ROOT</replaceable>
          (<option>-r</option>=<replaceable>ROOT</replaceable>)</term>
          <listitem>
            <para>Define a raiz virtual para os repositório servidos
              pelo <command>svnserve</command>.  O caminho nas URLs
              provido pelo cliente será interpretado como relativo a
              este diretório raiz, e não será permitido de lá
              escapar.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--tunnel</option> (<option>-t</option>)</term>
          <listitem>
            <para>Causes <command>svnserve</command> to run in tunnel
              mode, which is just like the <command>inetd</command>
              mode of operation (both modes serve one connection over
              stdin/stdout, then exit), except that the connection is
              considered to be pre-authenticated with the username of
              the current uid.  This flag is automatically passed for
              you by the client when running over a tunnel agent such
              as <command>ssh</command>.  That means there's rarely
              any need for <emphasis>you</emphasis> to pass this
              option to <command>svnserve</command>.  So if you find
              yourself typing <literal>svnserve --tunnel</literal> on
              the command line, and wondering what to do next, see
              <xref linkend="svn.serverconfig.svnserve.sshauth"/>.
              </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--tunnel-user NAME</option></term>
          <listitem>
            <para>Used in conjunction with the <option>--tunnel</option>
              option; tells svnserve to assume that
              <replaceable>NAME</replaceable> is the authenticated
              user, rather than the UID of the svnserve
              process.  Useful for users wishing to share a single
              system account over SSH, but maintaining separate commit
              identities.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--threads</option> (<option>-T</option>)</term>
          <listitem>
            <para>When running in daemon mode, causes
              <command>svnserve</command> to spawn a thread instead of
              a process for each connection (e.g. for when running on
              Windows).  The <command>svnserve</command> process still
              backgrounds itself at startup time.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><option>--listen-once</option> (<option>-X</option>)</term>
          <listitem>
            <para>Causes <command>svnserve</command> to accept one
              connection on the svn port, serve it, and exit.  This
              option is mainly useful for debugging.</para>
          </listitem>
        </varlistentry>

      </variablelist>

    </sect2>

  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.ref.svnversion">

    <title><command>svnversion</command></title>
    
    <refentry id="svn.ref.svnversion.re">

      <indexterm>
        <primary>svnversion</primary>
      </indexterm>

      <refnamediv>
        <refname>svnversion</refname>
        <refpurpose>Summarize the local revision(s) of a working
                    copy.</refpurpose>
      </refnamediv>

      <refsect1 id="svn.ref.svnversion.re.syn">
        <title>Sinopse</title>
        <programlisting>svnversion [OPTIONS] [WC_PATH [TRAIL_URL]]</programlisting>
      </refsect1>

      <refsect1 id="svn.ref.svnversion.re.desc">
        <title>Descrição</title>

        <para><command>svnversion</command> is a program for
          summarizing the revision mixture of a working copy.  The
          resultant revision number, or revision range, is written to
          standard output.</para>

        <para>It's common to use this output in your build process
          when defining the version number of your program.</para>
        
        <para><replaceable>TRAIL_URL</replaceable>, if present, is the
          trailing portion of the URL used to determine if
          <replaceable>WC_PATH</replaceable> itself is switched
          (detection of switches within
          <replaceable>WC_PATH</replaceable> does not rely on
          <replaceable>TRAIL_URL</replaceable>).</para>

        <para>When <replaceable>WC_PATH</replaceable> is not defined,
          the current directory will be used as the working copy path.
          <replaceable>TRAIL_URL</replaceable> cannot be defined if
          <replaceable>WC_PATH</replaceable> is not explicitly
          given.</para>
  
      </refsect1>

      <refsect1 id="svn.ref.svnversion.re.sw">
        <title>Opções</title>

        <para>Like <command>svnserve</command>,
          <command>svnversion</command> has no subcommands, it only
          has options.</para>

        <variablelist>
    
          <varlistentry>
            <term><option>--no-newline</option> (<option>-n</option>)</term>
            <listitem>
              <para>Omit the usual trailing newline from the output.</para>
            </listitem>
          </varlistentry>
    
          <varlistentry>
            <term><option>--committed</option> (<option>-c</option>)</term>
            <listitem>
              <para>Use the last-changed revisions rather than the
              current (i.e., highest locally available) revisions.</para>
            </listitem>
          </varlistentry>
    
          <varlistentry>
            <term><option>--help</option> (<option>-h</option>)</term>
            <listitem>
              <para>Print a help summary.</para>
            </listitem>
          </varlistentry>
    
          <varlistentry>
            <term><option>--version</option></term>
            <listitem>
              <para>Print the version of <command>svnversion</command>
              and exit with no error.</para>
            </listitem>
          </varlistentry>

        </variablelist>
      </refsect1>

      <refsect1 id="svn.ref.svnversion.re.examples">
        <title>Exemplos</title>

        <para>If the working copy is all at the same revision (for
          example, immediately after an update), then that revision is
          printed out:</para>

        <screen>
$ svnversion
4168
</screen>

        <para>You can add <replaceable>TRAIL_URL</replaceable> to make
          sure that the working copy is not switched from what you
          expect.  Note that the <replaceable>WC_PATH</replaceable>
          is required in this command:</para>

        <screen>
$ svnversion . /repos/svn/trunk
4168
</screen>

        <para>For a mixed-revision working copy, the range of
          revisions present is printed:</para>

        <screen>
$ svnversion
4123:4168
</screen>

        <para>If the working copy contains modifications, a trailing
          "M" is added:</para>

        <screen>
$ svnversion
4168M
</screen>

        <para>If the working copy is switched, a trailing "S" is
          added:</para> 

        <screen>
$ svnversion
4168S
</screen>

        <para>Thus, here is a mixed-revision, switched working copy
          containing some local modifications:</para>

        <screen>
$ svnversion
4212:4168MS
</screen>

        <para>If invoked on a directory that is not a working copy,
          <command>svnversion</command> assumes it is an exported
          working copy and prints "exported":</para>

        <screen>
$ svnversion
exported
</screen>

      </refsect1>

    </refentry>
  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.ref.mod_dav_svn">

    <title><command>mod_dav_svn</command></title>
    
    <refentry id="svn.ref.mod_dav_svn.conf">
      <refnamediv>

        <refname>Diretivas de Configuração do <literal>mod_dav_svn</literal>
        </refname> <refpurpose>As diretivas de configuração do Apache
        para servir repositórios do Subversion através de um Servidor
        HTTP Apache.</refpurpose> 

      </refnamediv>

      <refsect1 id="svn.ref.mod_dav_svn.conf.desc">
        <title>Descrição</title>

        <para>Esta seção descreve brevemente cada um das diretivas de
          configuração do Subversion no Apache.  Para uma descrição
          mais detalhada da configuração do Apache com Subversion, veja <xref
          linkend="svn.serverconfig.httpd"/>.)</para>

      </refsect1>

      <refsect1 id="svn.ref.mod_dav_svn.conf.directives">
        <title>Diretivas</title>

        <variablelist>
    
          <varlistentry>
            <term><literal>DAV svn</literal></term>
            <listitem>

              <para>Esta diretiva deve ser incluída em qualquer
                bloco <literal>Directory</literal> ou
                <literal>Location</literal> para um repositório do
                Subversion.  Ela diz ao httpd usar o módulo base do
                Subversion para que o mod_dav manipule todas as requisições.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNAutoversioning On</literal></term>
            <listitem>

              <para>Esta diretiva permite que requisições de clientes
                WebDAV resultem em submissões automáticas.  Uma mensagem de log
                genérica é gerada automaticamente e anexada a cada
                revisão.  Se você habilitar o Auto-versionamento, é provável que
                você queira definir <literal>ModMimeUsePathInfo On</literal>
                de forma que <literal>mod_mime</literal> pode definir a propriedade
                <literal>svn:mime-type</literal> para o mime-type
                correto automaticamente (e <literal>mod_mime</literal>
                 é capaz de fazer isto muito bem, naturalmente).
                Para mais informações, veja <xref
                linkend="svn.webdav"/></para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNPath</literal></term>
            <listitem>

              <para>Esta diretiva especifica o local no sistema de
                arquivo para os arquivos do repositório do Subversion.  Em um
                bloco de configuração para um repositório Subversion,
                ou esta diretiva ou
                <literal>SVNParentPath</literal> deve estar presente, mas
                não ambas.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNSpecialURI</literal></term>
            <listitem>

              <para>Especifica o componente URI (espaço de nome) para
                recursos especiais do Subversion.  O padrão é
                <quote><literal>!svn</literal></quote>, e a maioria
                dos administradores nunca usarão esta diretiva.  Somente
                defina ela se houver uma necessidade premente de ter um arquivo
                chamado <filename>!svn</filename> em seu repositório.  Se
                você mudar ela em um servidor já em uso, ele
                quebrará todas as cópias de trabalho existentes e seus
                usuários caçarão você com garfões e tochas
                de fogo.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNReposName</literal></term>
            <listitem>

              <para>Especifica o nome de um repositório Subversion a ser
                usado nas respostas <literal>HTTP GET</literal>.  Este
                valor será colocado no início do título de todas as listagens
                de diretório (as quais são servidas quando você navega em um
                repositório Subversion com um navegador web).  Esta
                diretiva é opcional.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNIndexXSLT</literal></term>
            <listitem>

              <para>Especifica a URI de uma transformação XSL para os
                índices de diretório.  Esta diretiva é opcional.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNParentPath</literal></term>
            <listitem>

              <para>Especifica o local no sistema de arquivo de um
                diretório pai, cujos diretórios filhos são
                repositórios do Subversion.  Em um bloco de configuração para
                um repositório Subversion, ou esta diretiva ou
                <literal>SVNPath</literal> deve estar presente, mas não
                ambas.</para>

            </listitem>
          </varlistentry>

          <varlistentry>
            <term><literal>SVNPathAuthz</literal></term>
            <listitem>

              <para>Controla a autorização baseada em caminho ao habilitar ou
                desabilitar sub-requisições.  Veja <xref
                linkend="svn.serverconfig.httpd.authz.pathauthzoff"/> para detalhes.</para>

            </listitem>
          </varlistentry>

        </variablelist>
      </refsect1>
    </refentry>
  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.ref.properties">

    <title>Propriedades do Subversion</title>

    <para>O Subversion permite que os usuários inventem propriedades versionadas com
      nomes arbitrários em arquivos e diretórios, bem como
      propriedades não-versionadas em revisões.  A única restrição está nas
      propriedades cujos nomes iniciam com <literal>svn:</literal> (esses
      são reservados para uso do próprio Subversion).  Enquanto estas propriedades
      podem ser definidas pelos usuários para controlar o comportamento do Subversion, os usuários não
      podem inventar novas propriedades <literal>svn:</literal>.</para>

    <sect2 id="svn.ref.properties.versioned-props">
      <title>Propriedades Versionadas</title>

      <variablelist>

        <varlistentry>
          <term><literal>svn:executable</literal></term>
          <listitem>

            <para>Se presente em um arquivo, o cliente tornará o
              arquivo executável em cópias de trabalho hospedadas em Unix.  Veja
              <xref
              linkend="svn.advanced.props.special.executable"/>.</para>

          </listitem>
        </varlistentry>

        <varlistentry>
          <term><literal>svn:mime-type</literal></term>
          <listitem>

            <para>Se presente em um arquivo, o valor indica o
              mime-type do arquivo.  Esta propriedade permite ao cliente decidir
              se a mesclagem contextual baseada em linhas é segura para
              ser realizada durante as atualizações, e também pode afetar como o
              arquivo comporta-se quando renderizado por um navegador web.  Veja
              <xref
              linkend="svn.advanced.props.special.mime-type"/>. </para>

          </listitem>
        </varlistentry>

        <varlistentry>
          <term><literal>svn:ignore</literal></term>
          <listitem>

            <para>Se presente em um diretório, o valor é uma lista de
              filtros de arquivos <emphasis>não-versionados</emphasis> a serem ignorados
              por <command>svn status</command> e outros
              subcomandos.  veja
              <xref
              linkend="svn.advanced.props.special.ignore"/></para>

          </listitem>
        </varlistentry>

        <varlistentry>
          <term><literal>svn:keywords</literal></term>
          <listitem>

            <para>Se presente em um arquivo, o valor diz ao cliente
              como expandir determinadas palavras-chave dentro do arquivo.
              Veja
              <xref
              linkend="svn.advanced.props.special.keywords"/>.</para>

          </listitem>
        </varlistentry>

        <varlistentry>
          <term><literal>svn:eol-style</literal></term>
          <listitem>

            <para>Se presente em um arquivo, o valor diz ao cliente como
              manipular as quebras de linha do arquivo na cópia de
              trabalho e em árvores exportadas.  Veja <xref
              linkend="svn.advanced.props.special.eol-style"/> e
              <xref linkend="svn.ref.svn.c.export" />.</para>

          </listitem>
        </varlistentry>

        <varlistentry>
          <term><literal>svn:externals</literal></term>
          <listitem>

            <para>Se presente em um diretório, o valor é uma
              lista de várias linhas com outros caminhos e URLs que o cliente
              deve verificar.  Veja
              <xref
              linkend="svn.advanced.externals"/>.</para>

          </listitem>
        </varlistentry>

        <varlistentry>
          <term><literal>svn:special</literal></term>
          <listitem>

            <para>Se presente em um arquivo, indica que o arquivo não é
              um arquivo normal, mas uma ligação simbólica ou outro objeto
              especial<footnote><para>Até o momento, ligações simbólicas
              são, na verdade, apenas objetos <quote>especiais</quote>.  Mas
              poderão existir mais outros em versões futuras
              do Subversion.</para></footnote>.</para>

          </listitem>
        </varlistentry>

        <varlistentry>
          <term><literal>svn:needs-lock</literal></term>
          <listitem>

            <para>Se presente em um arquivo, diz ao cliente para tornar o
              arquivo somente de leitura na cópia de trabalho, como um lembrete de que
              o arquivo deve ser travado antes de iniciar sua edição.  Veja
              <xref
              linkend="svn.advanced.locking.lock-communication"/>.</para>

          </listitem>
        </varlistentry>

      </variablelist>
    </sect2>

    <sect2 id="svn.ref.properties.unversioned-props">
      <title>Propriedades Não-Versionadas</title>

      <variablelist>

        <varlistentry>
          <term><literal>svn:author</literal></term>
          <listitem>

            <para>Se presente, contém o nome de usuário autenticado da
              pessoa que criou a revisão.  (Se não presente,
              então a revisão foi submitida anonimamente.)</para>

          </listitem>
        </varlistentry>

        <varlistentry>
          <term><literal>svn:date</literal></term>
          <listitem>

            <para>Contém a data e hora em UTC em que a revisão foi criada, no
              formato ISO 8601.  O valor vem do relógio do
              computador <emphasis>servidor</emphasis>, não do
              cliente.</para>

          </listitem>
        </varlistentry>

        <varlistentry>
          <term><literal>svn:log</literal></term>
          <listitem>

            <para>Contém a mensagem de log descrevendo a
              revisão.</para>

          </listitem>
        </varlistentry>

        <varlistentry>
          <term><literal>svn:autoversioned</literal></term>
          <listitem>

            <para>Se presente, a revisão foi criada por meio do
              recurso de autoversionamento.  Veja
              <xref linkend="svn.webdav.autoversioning"/>.</para>

          </listitem>
        </varlistentry>

      </variablelist>
    </sect2>

  </sect1>

  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <!-- ================================================================= -->
  <sect1 id="svn.ref.reposhooks">
  
    <title>Ganchos do Repositório</title>
  
    <!-- =============================================================== -->
    <refentry id="svn.ref.reposhooks.start-commit">
  
      <indexterm>
        <primary>repositório</primary>
        <secondary>ganchos</secondary>
        <tertiary>start-commit</tertiary>
      </indexterm>

      <refnamediv>
        <refname>start-commit</refname>
        <refpurpose>Notificação do início de uma submissão.</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Descrição</title>
        
        <para>O gancho start-commit é executado antes da transação de
          submissão ser criada.  Isto é normalmente usado para
          decidir se o usuário possui privilégios de submissão.</para>

        <para>Se o programa de gancho start-commit retorna um código de saída
          não-zero, a submissão é interrompida antes da transação de submissão
          ser criada, e qualquer coisa impressa em stderr é
          devolvida ao cliente.</para>

      </refsect1>

      <refsect1>
        <title>Parâmetros de Entrada</title>

        <para>Os argumentos de linha de comando passados ao programa de gancho,
          em ordem, são:</para>
        
        <orderedlist>
          <listitem>
            <para>caminho do repositório</para>
          </listitem>
          <listitem>
            <para>nome do usuário autenticado que está tentando submeter</para>
          </listitem>
        </orderedlist>
      </refsect1>
      
      <refsect1>
        <title>Usos Comuns</title>

        <para>controle de acesso</para>
      </refsect1>
  
      <!-- TODO(fitz): 1.5 Give a good example here of what we might use
        start-commit for (eg lock out commits temporarily for some reason).  -->

    </refentry>
        
    <!-- =============================================================== -->
    <refentry id="svn.ref.reposhooks.pre-commit">
  
      <indexterm>
        <primary>repositório</primary>
        <secondary>ganchos</secondary>
        <tertiary>pre-commit</tertiary>
      </indexterm>

      <refnamediv>
        <refname>pre-commit</refname>
        <refpurpose>Notificação pouco antes da conclusão da submissão.</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Descrição</title>

        <para>O gancho pre-commit é executado pouco antes de uma transação de
          submissão ser promovida para uma nova revisão.  Geralmente,
          este gancho é usado para proteger contra submissões que são
          recusadas devido ao conteúdo ou local (por exemplo, seu
          site pode requerer que todas submissões para um certo ramo
          inclua um número de entrada no <foreignphrase>issue tracker</foreignphrase>, ou que a
          mensagem de log recebida não seja vazia).</para>

        <para>Se o programa de gancho pre-commit retorna um código de saída
          não-zero, a submissão é abortada, a transação de submissão é
          removida, e qualquer coisa impressa em stderr é devolvida
          ao cliente.</para>

      </refsect1>

      <refsect1>
        <title>Parâmetros de Entrada</title>

        <para>Os argumentos de linha de comando passados ao programa de gancho,
          em ordem, são:</para>

        <orderedlist>
          <listitem>
            <para>caminho do repositório</para>
          </listitem>
          <listitem>
            <para>nome da transação de submissão</para>
          </listitem>
        </orderedlist>
      </refsect1>
      
      <refsect1>
        <title>Usos Comuns</title>
        <para>validação e controle de mudanças</para>
      </refsect1>
  
    </refentry>
        
    <!-- =============================================================== -->
    <refentry id="svn.ref.reposhooks.post-commit">
  
      <indexterm>
        <primary>repositório</primary>
        <secondary>ganchos</secondary>
        <tertiary>post-commit</tertiary>
      </indexterm>

      <refnamediv>
        <refname>post-commit</refname>
        <refpurpose>Notificação de uma submissão com sucesso.</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Descrição</title>

        <para>O gancho post-commit é executado depois que a transação é
          submetida, e uma nova revisão criada.  Maior parte das pessoas usa
          este gancho para enviar mensagens eletrônicas com detalhes sobre a submissão
          ou para notificar alguma outra ferramenta (tal como um <foreignphrase>issue tracker</foreignphrase>)
          que uma submissão aconteceu.  Algumas configurações também usam
          este gancho para disparar processos de cópia de segurança.</para>

        <para>A sua saída e o código de saída retornados pelo
          programa de gancho post-commit são ignorados.</para>
              
      </refsect1>

      <refsect1>
        <title>Parâmetros de Entrada</title>

        <para>Os argumentos de linha de comando passados ao programa de gancho,
          em ordem, são:</para>
        
        <orderedlist>
          <listitem>
            <para>caminho do repositório</para>
          </listitem>
          <listitem>
            <para>número de revisão criado pela submissão</para>
          </listitem>
        </orderedlist>
      </refsect1>
      
      <refsect1>
        <title>Usos Comuns</title>
        <para>notificação de submissão, integração com ferramentas</para>
      </refsect1>
  
    </refentry>
        
    <!-- =============================================================== -->
    <refentry id="svn.ref.reposhooks.pre-revprop-change">
  
      <indexterm>
        <primary>repositório</primary>
        <secondary>ganchos</secondary>
        <tertiary>pre-revprop-change</tertiary>
      </indexterm>

      <refnamediv>
        <refname>pre-revprop-change</refname>
        <refpurpose>Notificação de uma tentativa de mudança de propriedade de
          uma revisão.</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Descrição</title>

        <para>O gancho pre-revprop-change é executado imediatamente antes da
          modificação de uma propriedade de revisão quando realizada
          fora do escopo de uma submissão normal.  Ao contrário dos outros
          ganchos, o estado padrão deste gancho é negar a ação
          proposta.  O gancho deve existir efetivamente e retornar um código de
          saída zero antes de uma modificação de propriedade de revisão possa
          acontecer.</para>

        <para>Se o gancho pre-revprop-change não existir, ele não é
          executável, ou retorna um código de saída não-zero, nenhuma mudança na
          propriedade será feita, e qualquer coisa impressa em stderr é
          devolvida ao cliente.</para>

      </refsect1>

      <refsect1>
        <title>Parâmetros de Entrada</title>

        <para>Os argumentos de linha de comando passados ao programa de gancho,
          em ordem, são:</para>

        <orderedlist>
          <listitem>
            <para>caminho do repositório</para>
          </listitem>
          <listitem>
            <para>revisão cuja propriedade está prestes a ser modificada</para>
          </listitem>
          <listitem>
            <para>nome do usuário autenticado tentando a mudança de propriedade</para>
          </listitem>
          <listitem>
            <para>nome da propriedade modificada</para>
          </listitem>
          <listitem>
            <para>descrição da mudança: <literal>A</literal> (adicionada),
              <literal>D</literal> (excluída), ou <literal>M</literal>
              (modificada)</para>
          </listitem>
        </orderedlist>

        <para>Adicionalmente, o Subversion passa para o programa de gancho por meio da
          entrada padrão o valor proposto para a propriedade.</para>

      </refsect1>
      
      <refsect1>
        <title>Usos Comuns</title>
        <para>controle de acesso, validação e controle de mudanças</para>
      </refsect1>
  
    </refentry>
        
    <!-- =============================================================== -->
    <refentry id="svn.ref.reposhooks.post-revprop-change">
  
      <indexterm>
        <primary>repositório</primary>
        <secondary>ganchos</secondary>
        <tertiary>post-revprop-change</tertiary>
      </indexterm>

      <refnamediv>
        <refname>post-revprop-change</refname>
        <refpurpose>Notificação de uma mudança de propriedade de uma revisão 
          com sucesso.</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Descrição</title>

        <para>O gancho post-revprop-change é executado imediatamente depois que
          a modificação de uma propriedade de revisão quando realizada
          fora do escopo de uma submissão normal.  Como pode ser derivado
          da descrição de sua contrapartida, o gancho
          pre-revprop-change, este gancho não executará toda vez,
          a menos que o gancho pre-revprop-change esteja implementado.  Ele é
          geralmente usado para enviar mensagem de notificação da mudança da
          propriedade.</para>

        <para>A sua saída e o código de saída retornados pelo
          programa de gancho post-revprop-change são ignorados.</para>

      </refsect1>

      <refsect1>
        <title>Parâmetros de Entrada</title>

        <para>Os argumentos de linha de comando passados ao programa de gancho,
          em ordem, são:</para>
        
        <orderedlist>
          <listitem>
            <para>caminho do repositório</para>
          </listitem>
          <listitem>
            <para>revisão cuja propriedade foi modificada</para>
          </listitem>
          <listitem>
            <para>nome de usuário autenticado da pessoa efetuando a mudança</para>
          </listitem>
          <listitem>
            <para>nome da propriedade modificada</para>
          </listitem>
          <listitem>
            <para>descrição da mudança: <literal>A</literal> (adicionado),
              <literal>D</literal> (excluído), ou <literal>M</literal>
              (modificado)</para>
          </listitem>
        </orderedlist>

        <para>Adicionalmente, o Subversion passa para o programa de gancho, por meio da
          entrada padrão, o valor anterior da propriedade.</para>

      </refsect1>
      
      <refsect1>
        <title>Usos Comuns</title>
        <para>notificação de mudança de propriedade de revisão</para>
      </refsect1>
  
    </refentry>
        
    <!-- =============================================================== -->
    <refentry id="svn.ref.reposhooks.pre-lock">
  
      <indexterm>
        <primary>repositório</primary>
        <secondary>ganchos</secondary>
        <tertiary>pre-lock</tertiary>
      </indexterm>

      <refnamediv>
        <refname>pre-lock</refname>
        <refpurpose>Notificação de uma tentativa de travamento de um caminho.</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Descrição</title>

        <para>O gancho pre-lock hook é executado quando alguém tenta travar
          um caminho.  Ele pode ser usado para prevenir travas em conjunto, ou para
          criar uma política mais complexa especificando exatamente quais usuários
          são permitidos a travar caminhos determinados.  Se o gancho relatar uma
          trava já existente, então ele pode também decidir quando um usuário é
          permitido a <quote>roubar</quote> a trava existente.</para>

        <para>Se o programa de gancho pre-lock retorna um código de saída
          não-zero, a ação de trava é abortada e qualquer coisa impressa em
          stderr é devolvida ao cliente.</para>

      </refsect1>

      <refsect1>
        <title>Parâmetros de Entrada</title>

        <para>Os argumentos de linha de comando passados ao programa de gancho,
          em ordem, são:</para>
        
        <orderedlist>
          <listitem>
            <para>caminho do repositório</para>
          </listitem>
          <listitem>
            <para>caminho versionado a ser travado</para>
          </listitem>
          <listitem>
            <para>nome de usuário autenticado da pessoa tentando o
              travamento</para>
          </listitem>
        </orderedlist>
      </refsect1>
      
      <refsect1>
        <title>Usos Comuns</title>
        <para>controle de acesso</para>
      </refsect1>
  
    </refentry>
        
    <!-- =============================================================== -->
    <refentry id="svn.ref.reposhooks.post-lock">
  
      <indexterm>
        <primary>repositório</primary>
        <secondary>ganchos</secondary>
        <tertiary>post-lock</tertiary>
      </indexterm>

      <refnamediv>
        <refname>post-lock</refname>
        <refpurpose>Notificação de um travamento de caminho com sucesso.</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Descrição</title>

        <para>O gancho post-lock é executado depois que um ou mais caminhos tenham sido
          travados.  Ele é geralmente usado para enviar mensagem de notificação do
          evento de trava.</para>

        <para>A sua saída e o código de saída retornados pelo programa de gancho
          post-lock são ignorados.</para>

      </refsect1>

      <refsect1>
        <title>Parâmetros de Entrada</title>

        <para>Os argumentos de linha de comando passados ao programa de gancho,
          em ordem, são:</para>
        
        <orderedlist>
          <listitem>
            <para>caminhos do repositório</para>
          </listitem>
          <listitem>
            <para>nome de usuário autenticado da pessoa quem travou os
              caminhos</para>
          </listitem>
        </orderedlist>

        <para>Adicionalmente, a lista de caminhos travados é passada para o
          programa de gancho por meio da entrada padrão, um caminhos por linha.</para>

      </refsect1>
      
      <refsect1>
        <title>Usos Comuns</title>
        <para>notificação de trava</para>
      </refsect1>
  
    </refentry>
        
    <!-- =============================================================== -->
    <refentry id="svn.ref.reposhooks.pre-unlock">
  
      <indexterm>
        <primary>repositório</primary>
        <secondary>ganchos</secondary>
        <tertiary>pre-unlock</tertiary>
      </indexterm>

      <refnamediv>
        <refname>pre-unlock</refname>
        <refpurpose>Notificação de uma tentativa de destravamento de caminho.</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Descrição</title>

        <para>O gancho pre-unlock é executado quando alguém tenta
          remover uma trava em um arquivo.  Ele pode ser usado para criar políticas
          que especifique quais usuários são permitidos para destravar caminhos
          determinados.  Isto é particularmente importante para determinar políticas
          sobre quebra de travas.  Se o usuário A trava um arquivo, o usuário B
          é permitido a quebrar a trava?  E se a trava existe a mais de uma
          semana?  Estes tipos de coisas podem ser decididas e executadas
          pelo gancho.</para>

        <para>Se o programa de gancho pre-unlock retorna um código de saída
          não-zero, a ação de destrava é abortada e qualquer coisa impressa em
          stderr é devolvida ao cliente.</para>

      </refsect1>

      <refsect1>
        <title>Parâmetros de Entrada</title>

        <para>Os argumentos de linha de comando passados ao programa de gancho,
          em ordem, são:</para>
        
        <orderedlist>
          <listitem>
            <para>caminho do repositório</para>
          </listitem>
          <listitem>
            <para>caminho versionado a ser destravado</para>
          </listitem>
          <listitem>
            <para>nome de usuário autenticado da pessoa tentando o 
              destravamento</para>
          </listitem>
        </orderedlist>
      </refsect1>
      
      <refsect1>
        <title>Usos Comuns</title>
        <para>controle de acesso</para>
      </refsect1>
  
    </refentry>
        
    <!-- =============================================================== -->
    <refentry id="svn.ref.reposhooks.post-unlock">
  
      <indexterm>
        <primary>repositório</primary>
        <secondary>ganchos</secondary>
        <tertiary>post-unlock</tertiary>
      </indexterm>

      <refnamediv>
        <refname>post-unlock</refname>
        <refpurpose>Notificação de um destravamento de caminho com sucesso.</refpurpose>
      </refnamediv>

      <refsect1>
        <title>Descrição</title>

        <para>O gancho post-unlock executa depois que um ou mais caminhos tenham
          sido destravados.  Isto é geralmente usado para enviar mensagem de
          notificação do evento de destrava.</para>

        <para>A sua saída e o código de saída retornados pelo
          programa de gancho post-unlock são ignorados.</para>

      </refsect1>

      <refsect1>
        <title>Parâmetros de Entrada</title>

        <para>Os argumentos de linha de comando passados ao programa de gancho,
          em ordem, são:</para>
        
        <orderedlist>
          <listitem>
            <para>caminho do repositório</para>
          </listitem>
          <listitem>
            <para>nome do usuário autenticado da pessoa quem destravou os 
              caminhos</para>
          </listitem>
        </orderedlist>

        <para>Adicionalmente, a lista de caminhos destravados é passada ao
          programa de gancho por meio da entrada padrão, um caminho por linha.</para>

      </refsect1>
      
      <refsect1>
        <title>Usos Comuns</title>
        <para>notificação de destravamento</para>
      </refsect1>
  
    </refentry>
  </sect1>
  
</chapter>

<!--
local variables: 
sgml-parent-document: ("book.xml" "chapter")
end:
-->
